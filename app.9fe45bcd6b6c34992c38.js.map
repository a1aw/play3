{"version":3,"sources":["webpack:///./src/css/style.css","webpack:///./src/js/components/SetupLocalPlayersModal.js","webpack:///./src/js/components/PassToPlayerModal.js","webpack:///./src/js/components/SelectKeypadKeyboardModal.js","webpack:///./src/js/components/Playground.js","webpack:///./src/js/components/NumericKeypad.js","webpack:///./src/js/playgrounds/GuessNumberPlayground.js","webpack:///./src/js/components/Games.js","webpack:///./src/js/components/GameModal.js","webpack:///./src/js/components/PartyModal.js","webpack:///./src/js/lib/client.js","webpack:///./src/js/App.js","webpack:///./src/css/guessnum.css?78dc","webpack:///./src/css/guessnum.css","webpack:///./src/css/style.css?9fcd"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","props","React","useState","players","setPlayers","items","min","max","key","nameFields","InputGroup","className","Prepend","Text","id","FormControl","placeholder","aria-label","aria-describedby","Modal","show","animation","backdrop","Header","Title","Body","Form","Group","Label","Control","as","onChange","p","document","getElementById","value","Button","variant","block","onClick","val","map","onComplete","Footer","playerName","onContinue","Playground","gameId","state","turnPlayer","loading","loadingMsg","keypad","client","on","partyEventListener","data","event","startGame","setState","player","myTurn","gameEventListener","response","this","onBootDone","req","gameRequest","resp","onResponse","console","warn","off","enable","disable","unregisterEventListener","minPlayers","maxPlayers","setupLocalPlayers","onDisable","alert","window","location","reload","partyPlayers","party","playersList","length","name","Spinner","isSetupComplete","renderPlayground","selectKeypadKeyboard","SelectKeypadKeyboardModal","SetupLocalPlayersModal","log","waitPlayer","PassToPlayerModal","nextTurn","bind","Component","hori","j","enabled","verti","numbers","includes","onNumberClick","disabled","ButtonGroup","Container","fluid","style","display","vertical","doneEnabled","onDoneClick","backspaceEnabled","onBackspaceClick","Def","instance","maximum","randCount","guess","homeScreen","gameScreen","keypadDisplay","funcKeyEnable","text","numberMin","numberMax","enabledKeys","bootDone","clearInterval","interval","getElementsByTagName","classList","remove","clearTimeout","timeout","lastGuess","number","success","countDone","countUpDownTo","awaitNumbers","disableInput","fakeRandom","rand","Math","floor","random","setTimeout","isMyTurn","enableInput","to","from","resultScreen","setInterval","cl","contains","add","endGame","shift","focus","guessStr","error","parseInt","isNaN","request","type","onKeyPress","evt","Append","getTurnPlayer","NumericKeypad","preventDefault","target","innerHTML","slice","icon","makeGameButton","onClickFunc","joinGame","startGameFunc","out","gameKey","Games","Check","label","checked","playersFalseInList","list","c","online","admin","playerList","aiMode","gameInitReadyList","playerReadyList","role","size","startBtnVariant","startBtnDisabled","startBtnText","startBtnClickFunc","gameMinPlayers","gameMaxPlayers","notReady","playerUnready","playerReady","playgroundBootDone","partyId","readOnly","url","navigator","share","prompt","Table","addAi","Client","endPoint","token","listeners","initializeSocket","socket","io","gameInitReady","dispatch","listener","array","index","indexOf","splice","emit","socketEmit","playerId","nickName","App","gameModalShow","partyModalShow","playground","listen","hash","joinParty","awaitChangeGame","updatePlayground","createElement","undefined","createParty","GameModal","onHide","PartyModal","ReactDOM","render","api","content","__esModule","default","options","exported","locals"],"mappings":"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","file":"app.9fe45bcd6b6c34992c38.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body {\\r\\n    width: 100%;\\r\\n    height: 100vh;\\r\\n    position: absolute;\\r\\n    background-color: rgb(229, 229, 229)\\r\\n}\\r\\n\\r\\n.party-list {\\r\\n    margin: 4px;\\r\\n    position: absolute;\\r\\n    top: 4px;\\r\\n    right: 4px;\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.hori-scroll {\\r\\n    margin: 4px;\\r\\n    overflow: auto;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.hori-scroll button {\\r\\n    margin: 4px;\\r\\n}\\r\\n\\r\\n.playground {\\r\\n    padding: 8px;\\r\\n}\\r\\n\\r\\n.loading {\\r\\n    margin-top: 1rem;\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 768px) {\\r\\n    nav {\\r\\n        margin-top: env(safe-area-inset-top);\\r\\n    }\\r\\n\\r\\n    .party-list {\\r\\n        margin-top: env(safe-area-inset-top);\\r\\n    }\\r\\n\\r\\n    .modal {\\r\\n        padding-top: env(safe-area-inset-top);\\r\\n        padding-bottom: env(safe-area-inset-bottom);\\r\\n    }\\r\\n\\r\\n    .playground {\\r\\n        padding-top: env(safe-area-inset-top);\\r\\n        padding-bottom: env(safe-area-inset-bottom);\\r\\n    }\\r\\n}\\r\\n\\r\\n/* Touch Keypad */\\r\\n\\r\\n.touch-keypad {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    margin: 0px;\\r\\n    padding: 0px;\\r\\n    z-index: 2;\\r\\n    background: rgba(255, 255, 255, 0.4);\\r\\n    padding-bottom: env(safe-area-inset-bottom);\\r\\n}\\r\\n\\r\\n.touch-keypad .btn-group-vertical {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.touch-keypad .numeric-keypad {\\r\\n    width: 75%;\\r\\n}\\r\\n\\r\\n.touch-keypad-key {\\r\\n    min-height: 58px;\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react';\r\nimport { Modal, Button, ButtonGroup, InputGroup, FormControl, Form } from 'react-bootstrap';\r\n\r\nexport default function (props) {\r\n    var [players, setPlayers] = React.useState(false);\r\n\r\n    var items = [];\r\n    var i;\r\n    for (i = props.min; i <= props.max; i++) {\r\n        items.push(<option key={i}>{i}</option>);\r\n    }\r\n\r\n    if (!players) {\r\n        players = props.min;\r\n    }\r\n\r\n    var nameFields = [];\r\n    for (i = 1; i <= players; i++) {\r\n        nameFields.push(\r\n            <InputGroup className=\"mb-3\" key={i}>\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text id={\"player-number-\" + i}>Player {i}</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                    placeholder={\"Player \" + i}\r\n                    aria-label=\"Nickname\"\r\n                    aria-describedby={\"player-number-\" + i}\r\n                    id={\"player-nick-\" + i}\r\n                />\r\n            </InputGroup>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <Modal show={props.show} animation={false} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Setup Players</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>This game requires at least {props.min} player(s) and at maximum {props.max} player(s). Please enter the names for the players below:</p>\r\n                <Form.Group>\r\n                    <Form.Label>Players:</Form.Label>\r\n                    <Form.Control as=\"select\" id=\"localPlayersSelect\" onChange={() => {\r\n                        var p = document.getElementById(\"localPlayersSelect\").value;\r\n                        setPlayers(p);\r\n                    }}>\r\n                        {items}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                {nameFields}\r\n                <Button variant=\"success\" block onClick={() => {\r\n                    var map = [];\r\n                    var i;\r\n                    var val;\r\n                    for (i = 1; i <= players; i++) {\r\n                        val = document.getElementById(\"player-nick-\" + i).value;\r\n                        if (val === \"\") {\r\n                            val = \"Player \" + i;\r\n                        }\r\n                        map.push(val);\r\n                    }\r\n                    props.onComplete(map);\r\n                }}>Continue</Button>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import React from 'react';\r\nimport { Modal, Button, ButtonGroup, InputGroup, FormControl, Form } from 'react-bootstrap';\r\n\r\nexport default function (props) {\r\n    return (\r\n        <Modal show={props.show} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Pass to {props.playerName}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>It is <b>{props.playerName}</b>'s turn! Pass the device and let {props.playerName} to press the \"Continue\" button.</p>\r\n                <Button variant=\"success\" block onClick={props.onContinue}>Continue</Button>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nexport default function (props) {\r\n    return (\r\n        <Modal show={props.show} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Keypad or keyboard?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>Please select either to use keypad or keyboard for input:</p>\r\n                <div className=\"d-flex\">\r\n                    <Button block><i className=\"fas fa-keyboard\"></i><br />Keyboard</Button>\r\n                    <Button block><i className=\"fas fa-gamepad\"></i><br />Keypad</Button>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import React from 'react';\r\nimport SetupLocalPlayersModal from './SetupLocalPlayersModal';\r\nimport PassToPlayerModal from './PassToPlayerModal';\r\nimport SelectKeypadKeyboardModal from './SelectKeypadKeyboardModal';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport io from 'socket.io-client';\r\n\r\nexport default class Playground extends React.Component {\r\n\r\n    constructor(props, gameId) {\r\n        super(props);\r\n        this.gameId = gameId;\r\n        this.state = { turnPlayer: false, loading: true, loadingMsg: \"Loading playground\", keypad: true };\r\n        this.props.client.on(\"party\", this.partyEventListener = (data) => {\r\n            if (data.event === \"startGame\") {\r\n                this.startGame();\r\n            } else if (data.event === \"nextTurn\") {\r\n                this.setState({\r\n                    turnPlayer: data.player\r\n                });\r\n                if (data.player.id === this.props.client.player.id) {\r\n                    this.myTurn();\r\n                }\r\n            }\r\n        });\r\n        this.props.client.on(\"game\", this.gameEventListener = (data) => {\r\n            this.response(data);\r\n        });\r\n    }\r\n\r\n    bootDone() {\r\n        this.props.onBootDone();\r\n    }\r\n\r\n    request(req) {\r\n        this.props.client.gameRequest(req);\r\n    }\r\n\r\n    response(resp) {\r\n        this.onResponse(resp);\r\n    }\r\n\r\n    onResponse(resp) {\r\n        console.warn(\"No response handler handling responses from server.\");\r\n        console.warn(resp);\r\n    }\r\n\r\n    unregisterEventListener() {\r\n        this.props.client.off(\"game\", this.gameEventListener);\r\n        this.props.client.off(\"party\", this.partyEventListener);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.setState({ selectKeypadKeyboard: true });\r\n        this.enable();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.disable();\r\n        this.unregisterEventListener();\r\n    }\r\n\r\n    isSetupComplete() {\r\n        return true;\r\n    }\r\n\r\n    setupLocalPlayers(min, max) {\r\n        this.setState({\r\n            loadingMsg: \"Setting up local players\",\r\n            minPlayers: min,\r\n            maxPlayers: max,\r\n            setupLocalPlayers: true\r\n        });\r\n    }\r\n\r\n    getTurnPlayer() {\r\n        return this.state.turnPlayer;\r\n    }\r\n\r\n    isMyTurn() {\r\n        return this.state.turnPlayer && this.props.client.player.id === this.state.turnPlayer.id;\r\n    }\r\n\r\n    myTurn() {\r\n\r\n    }\r\n\r\n    startGame() {\r\n\r\n    }\r\n\r\n    leave() {\r\n        this.disable();\r\n        this.props.onDisable();\r\n        alert(\"TODO: Leave\");\r\n        window.location.reload();\r\n        //TODO Submit leave status\r\n    }\r\n\r\n    endGame() {\r\n        this.disable();\r\n        this.props.onDisable();\r\n    }\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n\r\n    renderPlayground() {\r\n\r\n    }\r\n\r\n    render() {\r\n        var partyPlayers = this.props.party.players;\r\n        var playersList = [];\r\n        var i;\r\n        for (i = 0; i < partyPlayers.length; i++) {\r\n            playersList.push(<div key={partyPlayers[i].id}><span className={this.props.client.player.id === partyPlayers[i].id ? \"font-weight-bold\" : \"\"}>{(this.state.turnPlayer && this.state.turnPlayer.id === partyPlayers[i].id) ? \"➡️ \" : \"\"}{partyPlayers[i].name}</span><br /></div>);\r\n        }\r\n        return (\r\n            <div className=\"container-fluid playground\">\r\n                {this.state.loading &&\r\n                    <div className=\"loading d-flex align-items-center justify-content-center\">\r\n                    <center><Spinner animation=\"border\" /><br /><span>{this.state.loadingMsg}</span></center>\r\n                    </div>\r\n                }\r\n                {this.isSetupComplete() && this.renderPlayground()}\r\n                {this.state.selectKeypadKeyboard &&\r\n                    <SelectKeypadKeyboardModal show={true} />\r\n                }\r\n                {this.state.setupLocalPlayers &&\r\n                    <SetupLocalPlayersModal min={this.state.minPlayers} max={this.state.maxPlayers} show={this.state.setupLocalPlayers} onComplete={\r\n                    (map) => {\r\n                        console.log(map);\r\n                        this.players = map;\r\n                        this.setState({\r\n                            setupLocalPlayers: false,\r\n                            loadingMsg: \"Loading playground\"\r\n                        });\r\n                        this.enable();\r\n                    }} />\r\n                }\r\n                {this.state.waitPlayer &&\r\n                    <PassToPlayerModal show={this.state.waitPlayer} playerName={this.state.playerName} onContinue={(() => {\r\n                        this.setState({ waitPlayer: false });\r\n                        this.nextTurn();\r\n                    }).bind(this)} />\r\n                }\r\n                {playersList &&\r\n                    <div className=\"party-list\">\r\n                        <h4>Party</h4>\r\n                        {playersList}\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\r\nimport { Container, ButtonGroup, Button } from 'react-bootstrap';\r\n\r\nexport default function (props) {\r\n    var verti = [];\r\n    var hori;\r\n    var numbers = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\r\n    var i;\r\n    var j;\r\n    var enabled;\r\n    for (i = 0; i < numbers.length; i++) {\r\n        hori = [];\r\n        for (j = 0; j < numbers[i].length; j++) {\r\n            if (props.enabled && props.enabled.length !== 0) {\r\n                enabled = props.enabled.includes(numbers[i][j]);\r\n            } else {\r\n                enabled = false;\r\n            }\r\n            hori.push(\r\n                <Button variant={enabled ? \"outline-secondary\" : \"secondary\"} className=\"py-3 touch-keypad-key touch-keypad-value\" key={i + \"-\" + j} onClick={props.onNumberClick} disabled={!enabled}>{numbers[i][j]}</Button>\r\n            );\r\n        }\r\n        verti.push(\r\n            <ButtonGroup key={i}>\r\n                {hori}\r\n            </ButtonGroup>\r\n        );\r\n    }\r\n    return (\r\n        <Container fluid={true} className=\"touch-keypad row\" style={{display: props.show ? \"\" : \"none\"}}>\r\n            <ButtonGroup vertical={true}>\r\n                {verti}\r\n                <ButtonGroup>\r\n                    <Button variant=\"primary\" className=\"py-3 touch-keypad-key touch-keypad-function touch-keypad-function-done\" disabled={!props.doneEnabled} onClick={props.onDoneClick}><i className=\"fas fa-check\"></i></Button>\r\n                    <Button variant={props.enabled && props.enabled.includes(0) ? \"outline-secondary\" : \"secondary\"} className=\"py-3 touch-keypad-key touch-keypad-value\" onClick={props.onNumberClick} disabled={!(props.enabled && props.enabled.includes(0))}>0</Button>\r\n                    <Button variant=\"warning\" className=\"py-3 touch-keypad-key touch-keypad-function touch-keypad-function-backspace\" disabled={!props.backspaceEnabled} onClick={props.onBackspaceClick}><i className=\"fas fa-backspace\"></i></Button>\r\n                </ButtonGroup>\r\n            </ButtonGroup>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport Playground from '../components/Playground.js';\r\nimport NumericKeypad from '../components/NumericKeypad';\r\nimport '../../css/guessnum.css';\r\n\r\nconst DEFAULT_MAXIMUM = 100;\r\n\r\nexport default class GuessNumberPlayground extends Playground {\r\n\r\n\tconstructor(props){\r\n        super(props, \"guessnum\");\r\n        this.maximum = DEFAULT_MAXIMUM;\r\n        this.randCount = 0;\r\n        this.guess = this.guess.bind(this);\r\n    }\r\n\r\n    getMinimumPlayers() {\r\n        return 1;\r\n    }\r\n\r\n    getMaximumPlayers() {\r\n        return 4;\r\n    }\r\n\r\n    enable() {\r\n        this.setState({\r\n            loading: false,\r\n            homeScreen: false,\r\n            gameScreen: false,\r\n            keypadDisplay: false,\r\n            funcKeyEnable: false,\r\n            keypad: true,\r\n            text: 0,\r\n            numberMin: 1,\r\n            numberMax: this.maximum,\r\n            enabledKeys: [],\r\n            numberMin: -1,\r\n            numberMax: -1\r\n        });\r\n        this.bootDone();\r\n    }\r\n\r\n    disable() {\r\n        clearInterval(this.interval);\r\n        document.getElementsByTagName(\"body\")[0].classList.remove(\"guessnum-correct\");\r\n        clearTimeout(this.timeout);\r\n    }\r\n\r\n    onResponse(resp) {\r\n        console.log(\"RESPONSE\");\r\n        console.log(resp);\r\n        if (resp.event === \"numberMinMax\") {\r\n            this.setState({\r\n                numberMin: resp.min,\r\n                numberMax: resp.max\r\n            });\r\n        } else if (resp.event === \"newGuess\") {\r\n            if (this.state.text === \"?\") {\r\n                this.setState({\r\n                    text: 0\r\n                });\r\n            }\r\n\r\n            var state = {\r\n                numberMin: resp.min,\r\n                numberMax: resp.max,\r\n                lastGuess: resp.number,\r\n                success: resp.success\r\n            };\r\n\r\n            if (this.state.countDone) {\r\n                this.setState(state);\r\n                this.countUpDownTo(resp.number);\r\n            } else {\r\n                this.awaitNumbers.push(state);\r\n            }\r\n        }\r\n    }\r\n\r\n    startGame() {\r\n        clearTimeout(this.timeout);\r\n        this.setState({\r\n            homeScreen: false,\r\n            gameScreen: true,\r\n            countDone: false\r\n        });\r\n        this.awaitNumbers = [];\r\n        this.disableInput();\r\n        this.fakeRandom();\r\n    };\r\n\r\n    fakeRandom() {\r\n        var rand = Math.floor(Math.random() * this.maximum);\r\n        this.setState({ text: rand });\r\n        this.randCount++;\r\n        if (this.randCount < 50 || this.state.numberMin === -1 || this.state.numberMax === -1) {\r\n            this.timeout = setTimeout(function () {\r\n                this.fakeRandom();\r\n            }.bind(this), 25);\r\n        } else {\r\n            this.randCount = 0;\r\n            this.setState({ text: \"?\", countDone: true });\r\n            if (this.isMyTurn()) {\r\n                this.enableInput();\r\n            }\r\n        }\r\n    }\r\n\r\n    countUpDownTo(to) {\r\n        this.setState({ countDone: false });\r\n        var from = this.state.text;\r\n        var i;\r\n        if (to > from) {\r\n            this.setState({ text: from + 1 });\r\n            this.timeout = setTimeout(function () {\r\n                this.countUpDownTo(to);\r\n            }.bind(this), 750 / (to - from));\r\n        } else if (to < from) {\r\n            this.setState({ text: from - 1 });\r\n            this.timeout = setTimeout(function () {\r\n                this.countUpDownTo(to);\r\n            }.bind(this), 750 / (from - to));\r\n        } else if (this.state.success) {\r\n            this.setState({ gameScreen: false, resultScreen: true });\r\n            this.interval = setInterval(function () {\r\n                var cl = document.getElementsByTagName(\"body\")[0].classList;\r\n                if (cl.contains(\"guessnum-correct\")) {\r\n                    cl.remove(\"guessnum-correct\");\r\n                } else {\r\n                    cl.add(\"guessnum-correct\");\r\n                }\r\n            }, 1000);\r\n            this.timeout = setTimeout(() => {\r\n                this.endGame();\r\n            }, 10000);\r\n            return;\r\n        } else if (this.awaitNumbers.length > 0) {\r\n            var state = this.awaitNumbers.shift();\r\n            this.setState(state);\r\n            this.countUpDownTo(state.lastGuess);\r\n        } else {\r\n            this.setState({ countDone: true });\r\n            if (this.isMyTurn()) {\r\n                this.enableInput();\r\n            }\r\n        }\r\n    }\r\n\r\n    enableInput() {\r\n        if (!this.state.keypad) {\r\n            document.getElementById(\"guess-number-field\").disabled = false;\r\n            document.getElementById(\"guess-number-field\").focus();\r\n        }\r\n        document.getElementById(\"guess-btn\").disabled = false;\r\n        this.setState({ keypadDisplay: this.state.keypad, funcKeyEnable: true, enabledKeys: [1, 2, 3, 4, 5, 6, 7, 8, 9, 0] });\r\n        //this.updateKeypad();\r\n    }\r\n\r\n    disableInput() {\r\n        document.getElementById(\"guess-number-field\").disabled = true;\r\n        document.getElementById(\"guess-btn\").disabled = true;\r\n        this.setState({ keypadDisplay: false, funcKeyEnable: false, enabledKeys: [] });\r\n    }\r\n\r\n    myTurn() {\r\n        if (this.state.countDone) {\r\n            this.enableInput();\r\n        }\r\n    }\r\n\r\n    guess() {\r\n        this.disableInput();\r\n        var guessStr = document.getElementById(\"guess-number-field\").value;\r\n        if (guessStr === \"\") {\r\n            this.enableInput();\r\n            this.setState({ error: \"It cannot be blank.\" });\r\n            document.getElementById(\"guess-btn\").disabled = false;\r\n            return;\r\n        }\r\n        var guess = parseInt(guessStr);\r\n        if (isNaN(guess)) {\r\n            this.enableInput();\r\n            this.setState({ error: \"It must be an integer.\" })\r\n            return;\r\n        }\r\n\r\n        if (guess >= this.state.numberMax) {\r\n            this.enableInput();\r\n            this.setState({ error: \"It cannot be larger than the maximum value.\" });\r\n            return;\r\n        } else if (guess <= this.state.numberMin) {\r\n            this.enableInput();\r\n            this.setState({ error: \"It cannot be less than the minimum value.\" });\r\n            return;\r\n        }\r\n\r\n        this.setState({ error: \"\" });\r\n\r\n        this.request({\r\n            event: \"guess\",\r\n            number: guess\r\n        });\r\n\r\n        document.getElementById(\"guess-number-field\").value = \"\";\r\n    }\r\n\r\n    renderPlayground() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.gameScreen &&\r\n                    <div className=\"d-flex flex-column align-items-center justify-content-center guessnum-home-screen\">\r\n                        <p className=\"display-2\">{this.state.text}</p>\r\n                        <p className=\"display-4\">{this.state.numberMin} - {this.state.numberMax}</p>\r\n                        <br />\r\n                        <InputGroup className=\"ml-8 mr-8\">\r\n                            <FormControl\r\n                                id=\"guess-number-field\"\r\n                                type=\"number\"\r\n                                placeholder=\"Your Guess\"\r\n                                aria-label=\"Your Guess\"\r\n                                onKeyPress={(evt) => {\r\n                                    if (evt.key === \"Enter\") {\r\n                                        this.guess();\r\n                                    }\r\n                                }}\r\n                                disabled\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <Button variant=\"success\" id=\"guess-btn\" onClick={this.guess}>Guess</Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <br />\r\n                        <p className=\"text-danger\">{this.state.error}</p>\r\n                    </div>\r\n                }\r\n                {\r\n                    this.state.resultScreen &&\r\n                    <div className=\"d-flex flex-column align-items-center justify-content-center guessnum-home-screen\">\r\n                        <p className=\"display-2\">{this.state.text}</p>\r\n                        <p className=\"display-4 text-success\">Bingo!</p>\r\n                        {this.props.party.players.length > 1 &&\r\n                            <p>Winner: <b>{this.getTurnPlayer().name}</b></p>\r\n                        }\r\n                        <br />\r\n                        <p>You will be redirected back to the party dialog very soon.</p>\r\n                    </div>\r\n                }\r\n                <NumericKeypad show={this.state.keypadDisplay} enabled={this.state.enabledKeys} doneEnabled={this.state.funcKeyEnable} backspaceEnabled={this.state.funcKeyEnable} onNumberClick={(evt) => {\r\n                    evt.preventDefault();\r\n                    console.log(\"Click num\");\r\n                    var val = evt.target.innerHTML;\r\n                    document.getElementById(\"guess-number-field\").value = document.getElementById(\"guess-number-field\").value + val;\r\n                    //this.updateKeypad();\r\n                }} onDoneClick={(evt) => {\r\n                    evt.preventDefault();\r\n                    console.log(\"Click done\");\r\n                    this.guess();\r\n                }} onBackspaceClick={(evt) => {\r\n                    evt.preventDefault();\r\n                    console.log(\"Click bs\");\r\n                    document.getElementById(\"guess-number-field\").value = document.getElementById(\"guess-number-field\").value.slice(0, -1);\r\n                    //this.updateKeypad();\r\n                }} />\r\n            </div>\r\n        );\r\n\t}\r\n\r\n}","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n/*\r\nimport ClassicPlayground from '../playgrounds/ClassicPlayground'\r\nimport RoyalPlayground from '../playgrounds/RoyalPlayground'\r\nimport TwentyOnePlayground from '../playgrounds/TwentyOnePlayground'\r\n*/\r\nimport GuessNumberPlayground from '../playgrounds/GuessNumberPlayground'\r\n/*\r\nimport GuessBigPlayground from '../playgrounds/GuessBigPlayground'\r\n*/\r\n\r\nconst Def = {\r\n    /*\r\n    \"classic\": {\r\n        instance: ClassicPlayground,\r\n        icon: \"fas fa-heart\",\r\n        name: \"Classic\",\r\n        minPlayers: 1,\r\n        maxPlayers: 4\r\n    },\r\n    \"royal\": {\r\n        instance: RoyalPlayground,\r\n        icon: \"fas fa-grin-stars\",\r\n        name: \"Royal\",\r\n        minPlayers: 1,\r\n        maxPlayers: 4\r\n    },\r\n    \"twentyone\": {\r\n        instance: TwentyOnePlayground,\r\n        icon: \"fas fa-sort-numeric-down\",\r\n        name: \"Twenty-one\",\r\n        minPlayers: 1,\r\n        maxPlayers: 4\r\n    },\r\n    */\r\n    \"guessnum\": {\r\n        instance: GuessNumberPlayground,\r\n        icon: \"fas fa-list-ol\",\r\n        name: \"Guess Number\",\r\n        minPlayers: 1,\r\n        maxPlayers: 4\r\n    }\r\n    /*,\r\n    \"guessbig\": {\r\n        instance: GuessBigPlayground,\r\n        icon: \"fas fa-dice\",\r\n        name: \"Guess Big\",\r\n        minPlayers: 1,\r\n        maxPlayers: 4\r\n    }\r\n    */\r\n};\r\n\r\nexport function isGameExist(gameId) {\r\n    return Def[gameId] !== undefined;\r\n}\r\n\r\nexport function getInstance(gameId) {\r\n    return Def[gameId].instance;\r\n}\r\n\r\nexport function getIcon(gameId) {\r\n    return Def[gameId].icon;\r\n}\r\n\r\nexport function getMinimumPlayers(gameId) {\r\n    return Def[gameId].minPlayers;\r\n}\r\n\r\nexport function getMaximumPlayers(gameId) {\r\n    return Def[gameId].maxPlayers;\r\n}\r\n\r\nexport function makeGameButton(gameId, disabled, onClickFunc) {\r\n    return <Button key={gameId} variant=\"secondary\" disabled={disabled} onClick={onClickFunc}><i className={Def[gameId].icon + \" fa-2x\"}></i><br />{Def[gameId].name}</Button>\r\n}\r\n\r\nexport function listOfGameButtons(startGameFunc) {\r\n    var out = [];\r\n    for (var gameKey in Def) {\r\n        out.push(\r\n            makeGameButton(gameKey, false, () => { startGameFunc(gameKey) })\r\n        );\r\n    }\r\n    return out;\r\n}","import React from 'react';\r\nimport { Modal, Button, ButtonGroup, InputGroup, FormControl, Form } from 'react-bootstrap';\r\nimport * as Games from './Games';\r\n\r\nexport default function(props) {\r\n    return (\r\n        <Modal show={props.show} animation={false} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Play³</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <label>Nickname:</label>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        id=\"nickname-field\"\r\n                        placeholder=\"Nickname\"\r\n                        aria-label=\"Nickname\"\r\n                        aria-describedby=\"party-code-field-addon\"\r\n                    />\r\n                </InputGroup>\r\n                <hr />\r\n                <label>Join a party:</label>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        id=\"party-code-field\"\r\n                        placeholder=\"Party Code\"\r\n                        aria-label=\"Party Code\"\r\n                        aria-describedby=\"party-code-field-addon\"\r\n                    />\r\n                    <InputGroup.Append>\r\n                        <Button variant=\"success\" onClick={props.joinGame}>Join</Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n                <div className=\"d-flex\">\r\n                    <Button variant=\"success\" className=\"btn-block\">Quick join</Button>\r\n                    <Button variant=\"secondary\" className=\"ml-2\"><i className=\"fas fa-cog\"></i></Button>\r\n                </div>\r\n                <hr />\r\n                <p>Start a new game:</p>\r\n                <div className=\"hori-scroll\">\r\n                    {Games.listOfGameButtons(props.startGame)}\r\n                </div>\r\n                <Form.Check\r\n                    type=\"switch\"\r\n                    id=\"local-mode-switch\"\r\n                    label=\"Start game locally\"\r\n                    checked={false}\r\n                    disabled\r\n                />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import React from 'react';\r\nimport { Modal, Button, ButtonGroup, InputGroup, FormControl, Form, Table, Spinner } from 'react-bootstrap';\r\nimport * as Games from './Games';\r\n\r\nfunction playersFalseInList(players, list) {\r\n    var c = 0;\r\n    for (var player of players) {\r\n        if (player.online && !list[player.id]) {\r\n            c++;\r\n        }\r\n    }\r\n    return c;\r\n}\r\n\r\nexport default function (props) {\r\n    var i;\r\n    var id;\r\n    var admin = props.party.admin;\r\n    var partyPlayers = props.party.players;\r\n    var playerList = [];\r\n    for (i = 0; i < partyPlayers.length; i++) {\r\n        id = partyPlayers[i][\"id\"];\r\n\r\n        playerList.push(\r\n            <tr key={id}>\r\n                <td>{i + 1}</td>\r\n                <td><span className={partyPlayers[i].online ? \"\" : \"text-secondary\"}>{id === admin.id ? \"👑 \" : \"\"}{partyPlayers[i][\"name\"]} {partyPlayers[i].aiMode ? \"(AI)\" : \"\"} {props.gameInitReadyList[id] || !partyPlayers[i].online ? (props.playerReadyList[id] ? \"✔️\" : \"\") : <Spinner animation=\"border\" role=\"status\" size=\"sm\"></Spinner>}</span></td>\r\n                <td></td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    var gameMinPlayers = Games.getMinimumPlayers(props.party.gameId);\r\n    var gameMaxPlayers = Games.getMaximumPlayers(props.party.gameId);\r\n\r\n    var startBtnVariant;\r\n    var startBtnDisabled;\r\n    var startBtnText;\r\n    var startBtnClickFunc;\r\n    if (playersFalseInList(partyPlayers, props.gameInitReadyList) > 0) {\r\n        startBtnVariant = \"secondary\";\r\n        startBtnDisabled = true;\r\n        startBtnText = \"Awaiting all players to boot game\";\r\n    } else {\r\n        if (props.playerReadyList[props.player.id]) {\r\n            if (props.player.id === admin.id) {\r\n                var notReady = playersFalseInList(partyPlayers, props.playerReadyList);\r\n                if (notReady > 0) {\r\n                    startBtnVariant = \"secondary\";\r\n                    startBtnDisabled = true;\r\n                    startBtnText = (partyPlayers.length - notReady) + \"/\" + partyPlayers.length + \" players ready\";\r\n                } else if (partyPlayers.length < gameMinPlayers) {\r\n                    startBtnVariant = \"secondary\";\r\n                    startBtnDisabled = true;\r\n                    startBtnText = \"Not enough players\";\r\n                } else {\r\n                    startBtnVariant = \"success\";\r\n                    startBtnDisabled = false;\r\n                    startBtnText = \"Start Game\";\r\n                    startBtnClickFunc = () => {\r\n                        props.client.startGame();\r\n                    };\r\n                }\r\n            } else {\r\n                startBtnVariant = \"warning\";\r\n                startBtnDisabled = false;\r\n                startBtnText = \"Unready\";\r\n                startBtnClickFunc = () => {\r\n                    props.client.playerUnready();\r\n                };\r\n            }\r\n        } else {\r\n            startBtnVariant = \"success\";\r\n            startBtnDisabled = false;\r\n            startBtnText = \"Ready\";\r\n            startBtnClickFunc = () => {\r\n                props.client.playerReady();\r\n            };\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Modal show={props.show} animation={false} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Party</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"d-flex\">\r\n                    {Games.makeGameButton(props.party.gameId, !props.playgroundBootDone || props.player.id !== admin.id, () => { })}\r\n                    <div className=\"container\">\r\n                        <span>Party Code:</span>\r\n                        <h2>{props.party.partyId}</h2>\r\n                        <InputGroup className=\"mb-2\">\r\n                            <FormControl\r\n                                id=\"share-link\"\r\n                                value={\"https://playplayplay.ml/#\" + props.party.partyId}\r\n                                readOnly\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <Button variant=\"primary\" onClick={() => {\r\n                                    var url = document.getElementById(\"share-link\").value;\r\n                                    if (navigator.share) {\r\n                                        navigator.share({\r\n                                            url: url\r\n                                        });\r\n                                    } else {\r\n                                        prompt(\"Your browser does not support sharing. Please copy the URL below and share it to your friends.\", url);\r\n                                    }\r\n                                }}><i className=\"fas fa-share-square\"></i> Share</Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <p className=\"mb-2\">{props.playgroundBootDone ? \"The game requires at least \" + gameMinPlayers + \" player(s) and at maximum \" + gameMaxPlayers + \" player(s).\" + (props.player.id === admin.id ? \" Click on the icon to change game.\" : \"\") : \"Loading...\"} </p>\r\n                        <Button variant={startBtnVariant} onClick={startBtnClickFunc} block disabled={startBtnDisabled}>{startBtnText}</Button>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Nickname</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {playerList}\r\n                    </tbody>\r\n                </Table>\r\n                {\r\n                    props.player.id === admin.id &&\r\n                    <Button variant=\"success\" onClick={() => {\r\n                        var playerName = prompt(\"AI Player Name:\");\r\n                        props.client.addAi(playerName);\r\n                    }} block><i className=\"fas fa-plus\"></i> Add computer (AI)</Button>\r\n                }\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import io from 'socket.io-client';\r\n\r\nexport default class Client {\r\n\r\n    constructor(endPoint) {\r\n        this.endPoint = endPoint;\r\n        this.player = false;\r\n        this.party = false;\r\n        this.token = false;\r\n        this.gameInitReadyList = {};\r\n        this.playerReadyList = {};\r\n        this.listeners = {};\r\n        this.initializeSocket();\r\n    }\r\n\r\n    initializeSocket() {\r\n        this.socket = io(this.endPoint);\r\n        this.socket.on(\"party\", (data) => {\r\n            console.log(data);\r\n            if (data.event === \"partyJoined\") {\r\n                this.player = data.player;\r\n                this.token = data.token;\r\n                this.party = data.party;\r\n            } else if (data.event === \"gameInitReady\") {\r\n                this.gameInitReadyList = data.gameInitReady;\r\n            } else if (data.event === \"playerReady\") {\r\n                this.playerReadyList = data.playerReady;\r\n            } else if (this.party && data.event === \"playerListChanged\") {\r\n                this.party.players = data.players;\r\n            } else if (this.party && data.event === \"gameChanged\") {\r\n                this.party.gameId = data.gameId;\r\n            } else if (this.party && data.event === \"playerChanged\") {\r\n                console.warn(\"Handle player changed\");\r\n            } else if (this.party && data.event === \"adminChanged\") {\r\n                this.party.admin = data.admin;\r\n            }\r\n            this.dispatch(\"party\", data);\r\n        });\r\n        this.socket.on(\"game\", (data) => {\r\n            this.dispatch(\"game\", data);\r\n        });\r\n        this.socket.on(\"chat\", (data) => {\r\n            this.dispatch(\"chat\", data);\r\n        });\r\n    }\r\n\r\n    on(event, listener) {\r\n        if (!this.listeners[event]) {\r\n            this.listeners[event] = [];\r\n        }\r\n        this.listeners[event].push(listener);\r\n    }\r\n\r\n    off(event, listener) {\r\n        if (!this.listeners[event]) {\r\n            return false;\r\n        }\r\n        var array = this.listeners[event];\r\n        var index = array.indexOf(listener);\r\n\r\n        if (index === -1) {\r\n            return false;\r\n        }\r\n\r\n        array.splice(index, 1);\r\n        return true;\r\n    }\r\n\r\n    dispatch(event, data) {\r\n        if (!this.listeners[event]) {\r\n            return;\r\n        }\r\n\r\n        var array = this.listeners[event];\r\n        for (var listener of array) {\r\n            listener(data, this);\r\n        }\r\n    }\r\n\r\n    socketEmit(event, data) {\r\n        this.socket.emit(event, data);\r\n    }\r\n\r\n    addAi(playerName) {\r\n        this.socketEmit(\"party\", {\r\n            event: \"addAi\",\r\n            token: this.token,\r\n            playerId: this.player.id,\r\n            partyId: this.party.partyId,\r\n            playerName: playerName\r\n        });\r\n    }\r\n\r\n    gameRequest(req) {\r\n        this.socketEmit(\"game\", {\r\n            token: this.token,\r\n            partyId: this.party.partyId,\r\n            playerId: this.player.id,\r\n            request: req\r\n        });\r\n    }\r\n\r\n    createParty(nickName, gameId) {\r\n        this.socketEmit(\"party\", {\r\n            event: \"create\",\r\n            gameId: gameId,\r\n            playerName: nickName\r\n        });\r\n    }\r\n\r\n    joinParty(nickName, partyId) {\r\n        this.socketEmit(\"party\", {\r\n            event: \"join\",\r\n            partyId: partyId,\r\n            playerName: nickName\r\n        });\r\n    }\r\n\r\n    gameInitReady() {\r\n        this.socketEmit(\"party\", {\r\n            event: \"gameInitReady\",\r\n            token: this.token,\r\n            partyId: this.party.partyId,\r\n            playerId: this.player.id\r\n        })\r\n    }\r\n\r\n    playerReady() {\r\n        this.socketEmit(\"party\", {\r\n            event: \"playerReady\",\r\n            token: this.token,\r\n            partyId: this.party.partyId,\r\n            playerId: this.player.id\r\n        })\r\n    }\r\n\r\n    playerUnready() {\r\n        this.socketEmit(\"party\", {\r\n            event: \"playerUnready\",\r\n            token: this.token,\r\n            partyId: this.party.partyId,\r\n            playerId: this.player.id\r\n        })\r\n    }\r\n\r\n    startGame() {\r\n        this.socketEmit(\"party\", {\r\n            event: \"startGame\",\r\n            token: this.token,\r\n            partyId: this.party.partyId,\r\n            playerId: this.player.id\r\n        })\r\n    }\r\n\r\n}","// JavaScript source code\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport io from 'socket.io-client';\r\nimport GameModal from './components/GameModal';\r\nimport PartyModal from './components/PartyModal'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/js/fontawesome';\r\nimport '@fortawesome/fontawesome-free/js/solid';\r\nimport '@fortawesome/fontawesome-free/js/regular';\r\nimport '@fortawesome/fontawesome-free/js/brands';\r\nimport '../css/style.css';\r\nimport * as Games from './components/Games';\r\nimport Client from './lib/client';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.client = new Client(\"https://0.playplayplay.ml\");\r\n        this.state = {\r\n            gameModalShow: true,\r\n            partyModalShow: false,\r\n            playground: false,\r\n            gameInitReadyList: false,\r\n            playerReadyList: false\r\n        };\r\n        this.startGame = this.startGame.bind(this);\r\n        this.joinGame = this.joinGame.bind(this);\r\n        this.listen();\r\n    }\r\n\r\n    ccomponentDidMount() {\r\n        if (window.location.hash && window.location.hash.length === 6) {\r\n            var name = prompt(\"Enter your nickname:\");\r\n\r\n            this.client.joinParty(name, window.location.hash);\r\n\r\n            this.setState({\r\n                gameModalShow: false\r\n            });\r\n        }\r\n    }\r\n\r\n    listen() {\r\n        this.client.on(\"party\", (data) => {\r\n            this.setState({\r\n                party: this.client.party\r\n            });\r\n\r\n            if (data.event === \"gameInitReady\") {\r\n                this.setState({\r\n                    gameInitReadyList: this.client.gameInitReadyList\r\n                });\r\n            }\r\n\r\n            if (data.event === \"playerReady\") {\r\n                this.setState({\r\n                    playerReadyList: this.client.playerReadyList\r\n                });\r\n            }\r\n\r\n            if (data.event === \"startGame\") {\r\n                this.setState({\r\n                    gameModalShow: false,\r\n                    partyModalShow: false\r\n                });\r\n            }\r\n\r\n            if (this.client.party && this.client.party.gameId && (data.event === \"partyJoined\" || data.event === \"gameChanged\")) {\r\n                if (this.state.playground) {\r\n                    this.setState({\r\n                        awaitChangeGame: true\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        gameModalShow: false,\r\n                        partyModalShow: true\r\n                    });\r\n                    this.updatePlayground();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    updatePlayground() {\r\n        this.setState({\r\n            playgroundBootDone: false,\r\n            playground: React.createElement(Games.getInstance(this.client.party.gameId), {\r\n                party: this.state.party,\r\n                client: this.client,\r\n                onBootDone: () => {\r\n                    console.log(\"Bootdone\");\r\n                    this.setState({\r\n                        playgroundBootDone: true\r\n                    });\r\n                    this.client.gameInitReady();\r\n                },\r\n                onDisable: () => {\r\n                    this.setState({\r\n                        gameModalShow: false,\r\n                        partyModalShow: true,\r\n                        playground: false,\r\n                        playgroundBootDone: false\r\n                    });\r\n\r\n                    if (this.state.awaitChangeGame) {\r\n                        this.setState({\r\n                            awaitChangeGame: false\r\n                        });\r\n                        this.updatePlayground();\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    joinGame() {\r\n        var nickName = document.getElementById(\"nickname-field\").value;\r\n        var partyId = document.getElementById(\"party-code-field\").value;\r\n\r\n        if (!nickName || nickName === \"\") {\r\n            alert(\"Please fill in your nickname.\");\r\n            return;\r\n        }\r\n\r\n        if (!partyId || partyId === \"\" || partyId.length !== 6) {\r\n            alert(\"Party Code Invalid.\");\r\n            return;\r\n        }\r\n\r\n        this.client.joinParty(nickName, partyId);\r\n\r\n        this.setState({\r\n            gameModalShow: false\r\n        });\r\n    }\r\n\r\n    startGame(gameId) {\r\n        if (!Games.isGameExist(gameId)) {\r\n            alert(\"The selected game is currently unavailable.\");\r\n            return;\r\n        }\r\n        var localMode = document.getElementById(\"local-mode-switch\").checked;\r\n        var nickName = document.getElementById(\"nickname-field\").value;\r\n\r\n        if (!nickName || nickName === \"\") {\r\n            alert(\"Please fill in your nickname.\");\r\n            return;\r\n        }\r\n\r\n        this.client.createParty(nickName, gameId);\r\n\r\n        this.setState({\r\n            gameModalShow: false\r\n        });\r\n        /*\r\n        this.setState({\r\n            gameModalShow: false,\r\n            playground: React.createElement(Games[gameName], {\r\n                localMode: localMode,\r\n                playerName: nickName,\r\n                onDisable: () => {\r\n                    this.setState({\r\n                        gameModalShow: true,\r\n                        partyModalShow: false,\r\n                        playground: false\r\n                    });\r\n                }\r\n            })\r\n        });\r\n        */\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.playground}\r\n                <GameModal show={this.state.gameModalShow} onHide={() => this.setState({ gameModalShow: false })} startGame={this.startGame} joinGame={this.joinGame} />\r\n                {\r\n                    this.state.partyModalShow &&\r\n                    <PartyModal show={this.state.partyModalShow} onHide={() => this.setState({ partyModalShow: false })} client={this.client} playerReadyList={this.state.playerReadyList} gameInitReadyList={this.state.gameInitReadyList} party={this.state.party} player={this.client.player} playgroundBootDone={this.state.playgroundBootDone} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./guessnum.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".guessnum-home-screen {\\r\\n    height: 90vh;\\r\\n}\\r\\n\\r\\nbody.guessnum-correct {\\r\\n    background-color: rgb(166, 255, 168)\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./style.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;"],"sourceRoot":""}