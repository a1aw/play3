{"version":3,"sources":["webpack:///./src/css/style.css?9fcd","webpack:///./src/css/style.css","webpack:///./src/js/components/SetupLocalPlayersModal.js","webpack:///./src/js/components/PassToPlayerModal.js","webpack:///./src/js/components/SelectKeypadKeyboardModal.js","webpack:///./src/js/components/Playground.js","webpack:///./src/js/playgrounds/BigTwoPlayground.js","webpack:///./src/js/components/NumericKeypad.js","webpack:///./src/js/playgrounds/GuessNumberPlayground.js","webpack:///./src/js/components/Games.js","webpack:///./src/js/components/GameModal.js","webpack:///./src/js/components/PartyModal.js","webpack:///./src/js/lib/client.js","webpack:///./src/js/App.js","webpack:///./src/js/lib/games/bigtwo/sizes.js","webpack:///./src/js/lib/games/bigtwo/findCombinations.js","webpack:///./src/js/lib/games/bigtwo/makeCombination.js","webpack:///./src/js/lib/games/bigtwo/card.js","webpack:///./src/js/lib/games/bigtwo/combination.js","webpack:///./src/css/bigtwo.css?aa0d","webpack:///./src/css/bigtwo.css","webpack:///./src/img/playingcards/back.svg","webpack:///./src/css/guessnum.css?78dc","webpack:///./src/css/guessnum.css"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","props","React","useState","players","setPlayers","items","min","max","key","nameFields","InputGroup","className","Prepend","Text","id","FormControl","placeholder","aria-label","aria-describedby","Modal","show","animation","backdrop","Header","Title","Body","Form","Group","Label","Control","as","onChange","p","document","getElementById","value","Button","variant","block","onClick","val","map","onComplete","Footer","playerName","onContinue","Playground","gameId","state","turnPlayer","loading","loadingMsg","keypad","client","on","partyEventListener","data","event","startGame","setState","player","myTurn","gameEventListener","response","this","onBootDone","req","gameRequest","resp","onResponse","console","warn","off","enable","disable","unregisterEventListener","minPlayers","maxPlayers","setupLocalPlayers","onDisable","alert","window","location","reload","partyPlayers","party","playersList","length","name","Spinner","isSetupComplete","renderPlayground","selectKeypadKeyboard","SelectKeypadKeyboardModal","SetupLocalPlayersModal","log","waitPlayer","PassToPlayerModal","nextTurn","bind","Component","BigTwoPlayground","fc","FindCombinations","onPassBtnClicked","onSubmitBtnClicked","bootDone","addEventListener","resizeEventListener","resizeBoard","deck","spreadCardsDone","removeEventListener","clearTimeout","timeout","calc","innerWidth","style","transform","jsonToCards","updateAvailableCombinations","spreadCards","updateDeck","numberOfCards","updateNumberOfCards","displayWaitingPlayers","isMyTurn","removePlayerLastCards","displayBottomPlayerPassed","displayTurnButtons","passBtnDisabled","lastPlayer","setPassed","cards","lastCombination","makeCombination","showPlayerLastCards","sendGameReady","decks","playerDecks","getPlayerById","winner","displayWinner","setTimeout","endGame","endsWith","code","msg","playerId","passed","loc","playerCardsMap","displayLeftPlayerPassed","displayRightPlayerPassed","displayTopPlayerPassed","unselectAllCards","cardIndex","elements","getElementsByClassName","el","halfLength","card","toRemove","parseInt","getAttribute","backgroundImage","transition","rank","suit","myTurnCards","classList","add","request","CARDS_LOCATION","playerInfoMap","obj","myIndex","parent","els","contains","removeChild","lastCards","replaceExistingCards","height","zIndex","tf","element","c","setAttribute","evt","stopImmediatePropagation","target","split","unselectCardElement","selectCardElement","Math","round","displayNumberOfCards","displayCombinationButtons","availableCombinations","findAll","combName","lastSelectCombinationName","lastSelectCombinationCount","matches","cardEl","match","matchCard","findCardElement","index","sendPass","getSelectedCards","d3Found","combination","combinationName","compare","sendTurn","out","results","Sizes","FIVE_CARD_HANDS","playerInfo1","playerInfo2","playerInfo3","ButtonGroup","disabled","selectCombination","hori","j","enabled","verti","numbers","includes","onNumberClick","Container","fluid","display","vertical","doneEnabled","onDoneClick","backspaceEnabled","onBackspaceClick","Def","instance","icon","maximum","randCount","guess","homeScreen","gameScreen","keypadDisplay","funcKeyEnable","text","numberMin","numberMax","enabledKeys","clearInterval","interval","getElementsByTagName","remove","lastGuess","number","success","countDone","countUpDownTo","awaitNumbers","disableInput","fakeRandom","rand","floor","random","enableInput","to","from","resultScreen","setInterval","cl","shift","focus","guessStr","error","isNaN","type","onKeyPress","Append","getTurnPlayer","NumericKeypad","preventDefault","innerHTML","slice","makeGameButton","onClickFunc","VERSION","joinGame","startGameFunc","gameKey","Games","Check","label","checked","playersFalseInList","list","online","admin","playerList","aiMode","gameInitReadyList","playerReadyList","role","size","kickPlayer","startBtnVariant","startBtnDisabled","startBtnText","startBtnClickFunc","gameMinPlayers","gameMaxPlayers","notReady","playerUnready","playerReady","playgroundBootDone","partyId","readOnly","url","navigator","share","prompt","Table","addAi","Client","endPoint","token","listeners","initializeSocket","socket","io","gameInitReady","dispatch","listener","array","indexOf","splice","emit","socketEmit","nickName","App","savedEndPoint","localStorage","getItem","gameModalShow","partyModalShow","playground","listen","search","joinParty","substring","awaitChangeGame","updatePlayground","createElement","undefined","createParty","GameModal","onHide","PartyModal","ReactDOM","render","SUIT","RANK","COMBINATIONS","Card","require","pair","threeOfAKind","straight","flush","fullHouse","fourOfAKind","straightFlush","deckToCards","findPair","findThreeOfAKind","findStraight","findFlush","findFullHouse","findFourOfAKind","findStraightFlush","byRankSame","byRankConsecutive","bySuitSame","byRankSameWithExternal","consec","comb","x","pairs","concat","len","externalFunc","y","equals","count","straights","sameCombinations","sizeFuncName","startPos","sort","a","b","aSize","bSize","getRankSize","sortDeckSuits","sortDeckRanks","getSuitSize","Combination","fiveCardName","result","found","myRankIndex","cardRankIndex","mySuitIndex","cardSuitIndex","Error","thisIndex","combinationIndex","thisRankSize","combinationRankSize","thisSuitSize","combinationSuitSize","___CSS_LOADER_GET_URL_IMPORT___","___CSS_LOADER_URL_IMPORT_0___","___CSS_LOADER_URL_REPLACEMENT_0___"],"mappings":"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","file":"app.f613fbc4a278e7389185.js","sourcesContent":["var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./style.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body {\\r\\n    width: 100%;\\r\\n    height: 100vh;\\r\\n    position: absolute;\\r\\n    background-color: rgb(229, 229, 229)\\r\\n}\\r\\n\\r\\n.party-list {\\r\\n    margin: 4px;\\r\\n    position: absolute;\\r\\n    top: 4px;\\r\\n    right: 4px;\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.hori-scroll {\\r\\n    margin: 4px;\\r\\n    overflow: auto;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.hori-scroll button {\\r\\n    margin: 4px;\\r\\n}\\r\\n\\r\\n.playground {\\r\\n    padding: 8px;\\r\\n}\\r\\n\\r\\n.loading {\\r\\n    margin-top: 1rem;\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 768px) {\\r\\n    nav {\\r\\n        margin-top: env(safe-area-inset-top);\\r\\n    }\\r\\n\\r\\n    .party-list {\\r\\n        margin-top: env(safe-area-inset-top);\\r\\n    }\\r\\n\\r\\n    .modal {\\r\\n        padding-top: env(safe-area-inset-top);\\r\\n        padding-bottom: env(safe-area-inset-bottom);\\r\\n    }\\r\\n\\r\\n    .playground {\\r\\n        padding-top: env(safe-area-inset-top);\\r\\n        padding-bottom: env(safe-area-inset-bottom);\\r\\n    }\\r\\n}\\r\\n\\r\\n/* Touch Keypad */\\r\\n\\r\\n.touch-keypad {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    margin: 0px;\\r\\n    padding: 0px;\\r\\n    z-index: 2;\\r\\n    background: rgba(255, 255, 255, 0.4);\\r\\n    padding-bottom: env(safe-area-inset-bottom);\\r\\n}\\r\\n\\r\\n.touch-keypad .btn-group-vertical {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.touch-keypad .numeric-keypad {\\r\\n    width: 75%;\\r\\n}\\r\\n\\r\\n.touch-keypad-key {\\r\\n    min-height: 58px;\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react';\r\nimport { Modal, Button, ButtonGroup, InputGroup, FormControl, Form } from 'react-bootstrap';\r\n\r\nexport default function (props) {\r\n    var [players, setPlayers] = React.useState(false);\r\n\r\n    var items = [];\r\n    var i;\r\n    for (i = props.min; i <= props.max; i++) {\r\n        items.push(<option key={i}>{i}</option>);\r\n    }\r\n\r\n    if (!players) {\r\n        players = props.min;\r\n    }\r\n\r\n    var nameFields = [];\r\n    for (i = 1; i <= players; i++) {\r\n        nameFields.push(\r\n            <InputGroup className=\"mb-3\" key={i}>\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text id={\"player-number-\" + i}>Player {i}</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                    placeholder={\"Player \" + i}\r\n                    aria-label=\"Nickname\"\r\n                    aria-describedby={\"player-number-\" + i}\r\n                    id={\"player-nick-\" + i}\r\n                />\r\n            </InputGroup>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <Modal show={props.show} animation={false} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Setup Players</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>This game requires at least {props.min} player(s) and at maximum {props.max} player(s). Please enter the names for the players below:</p>\r\n                <Form.Group>\r\n                    <Form.Label>Players:</Form.Label>\r\n                    <Form.Control as=\"select\" id=\"localPlayersSelect\" onChange={() => {\r\n                        var p = document.getElementById(\"localPlayersSelect\").value;\r\n                        setPlayers(p);\r\n                    }}>\r\n                        {items}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                {nameFields}\r\n                <Button variant=\"success\" block onClick={() => {\r\n                    var map = [];\r\n                    var i;\r\n                    var val;\r\n                    for (i = 1; i <= players; i++) {\r\n                        val = document.getElementById(\"player-nick-\" + i).value;\r\n                        if (val === \"\") {\r\n                            val = \"Player \" + i;\r\n                        }\r\n                        map.push(val);\r\n                    }\r\n                    props.onComplete(map);\r\n                }}>Continue</Button>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import React from 'react';\r\nimport { Modal, Button, ButtonGroup, InputGroup, FormControl, Form } from 'react-bootstrap';\r\n\r\nexport default function (props) {\r\n    return (\r\n        <Modal show={props.show} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Pass to {props.playerName}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>It is <b>{props.playerName}</b>'s turn! Pass the device and let {props.playerName} to press the \"Continue\" button.</p>\r\n                <Button variant=\"success\" block onClick={props.onContinue}>Continue</Button>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nexport default function (props) {\r\n    return (\r\n        <Modal show={props.show} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Keypad or keyboard?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>Please select either to use keypad or keyboard for input:</p>\r\n                <div className=\"d-flex\">\r\n                    <Button block><i className=\"fas fa-keyboard\"></i><br />Keyboard</Button>\r\n                    <Button block><i className=\"fas fa-gamepad\"></i><br />Keypad</Button>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import React from 'react';\r\nimport SetupLocalPlayersModal from './SetupLocalPlayersModal';\r\nimport PassToPlayerModal from './PassToPlayerModal';\r\nimport SelectKeypadKeyboardModal from './SelectKeypadKeyboardModal';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport io from 'socket.io-client';\r\n\r\nexport default class Playground extends React.Component {\r\n\r\n    constructor(props, gameId) {\r\n        super(props);\r\n        this.gameId = gameId;\r\n        this.state = { turnPlayer: false, loading: true, loadingMsg: \"Loading playground\", keypad: true };\r\n        this.props.client.on(\"party\", this.partyEventListener = (data) => {\r\n            if (data.event === \"startGame\") {\r\n                this.startGame();\r\n            } else if (data.event === \"nextTurn\") {\r\n                this.setState({\r\n                    turnPlayer: data.player\r\n                });\r\n                if (data.player.id === this.props.client.player.id) {\r\n                    this.myTurn();\r\n                }\r\n            }\r\n        });\r\n        this.props.client.on(\"game\", this.gameEventListener = (data) => {\r\n            this.response(data);\r\n        });\r\n    }\r\n\r\n    bootDone() {\r\n        this.props.onBootDone();\r\n    }\r\n\r\n    request(req) {\r\n        this.props.client.gameRequest(req);\r\n    }\r\n\r\n    response(resp) {\r\n        this.onResponse(resp);\r\n    }\r\n\r\n    onResponse(resp) {\r\n        console.warn(\"No response handler handling responses from server.\");\r\n        console.warn(resp);\r\n    }\r\n\r\n    unregisterEventListener() {\r\n        this.props.client.off(\"game\", this.gameEventListener);\r\n        this.props.client.off(\"party\", this.partyEventListener);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.setState({ selectKeypadKeyboard: true });\r\n        this.enable();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.disable();\r\n        this.unregisterEventListener();\r\n    }\r\n\r\n    isSetupComplete() {\r\n        return true;\r\n    }\r\n\r\n    setupLocalPlayers(min, max) {\r\n        this.setState({\r\n            loadingMsg: \"Setting up local players\",\r\n            minPlayers: min,\r\n            maxPlayers: max,\r\n            setupLocalPlayers: true\r\n        });\r\n    }\r\n\r\n    getTurnPlayer() {\r\n        return this.state.turnPlayer;\r\n    }\r\n\r\n    isMyTurn() {\r\n        return this.state.turnPlayer && this.props.client.player.id === this.state.turnPlayer.id;\r\n    }\r\n\r\n    myTurn() {\r\n\r\n    }\r\n\r\n    startGame() {\r\n\r\n    }\r\n\r\n    leave() {\r\n        this.disable();\r\n        this.props.onDisable();\r\n        alert(\"TODO: Leave\");\r\n        window.location.reload();\r\n        //TODO Submit leave status\r\n    }\r\n\r\n    endGame() {\r\n        this.disable();\r\n        this.props.onDisable();\r\n    }\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n\r\n    renderPlayground() {\r\n\r\n    }\r\n\r\n    render() {\r\n        var partyPlayers = this.props.party.players;\r\n        var playersList = [];\r\n        var i;\r\n        for (i = 0; i < partyPlayers.length; i++) {\r\n            playersList.push(<div key={partyPlayers[i].id}><span className={this.props.client.player.id === partyPlayers[i].id ? \"font-weight-bold\" : \"\"}>{(this.state.turnPlayer && this.state.turnPlayer.id === partyPlayers[i].id) ? \"➡️ \" : \"\"}{partyPlayers[i].name}</span><br /></div>);\r\n        }\r\n        return (\r\n            <div className=\"container-fluid playground\">\r\n                {this.state.loading &&\r\n                    <div className=\"loading d-flex align-items-center justify-content-center\">\r\n                    <center><Spinner animation=\"border\" /><br /><span>{this.state.loadingMsg}</span></center>\r\n                    </div>\r\n                }\r\n                {this.isSetupComplete() && this.renderPlayground()}\r\n                {this.state.selectKeypadKeyboard &&\r\n                    <SelectKeypadKeyboardModal show={true} />\r\n                }\r\n                {this.state.setupLocalPlayers &&\r\n                    <SetupLocalPlayersModal min={this.state.minPlayers} max={this.state.maxPlayers} show={this.state.setupLocalPlayers} onComplete={\r\n                    (map) => {\r\n                        console.log(map);\r\n                        this.players = map;\r\n                        this.setState({\r\n                            setupLocalPlayers: false,\r\n                            loadingMsg: \"Loading playground\"\r\n                        });\r\n                        this.enable();\r\n                    }} />\r\n                }\r\n                {this.state.waitPlayer &&\r\n                    <PassToPlayerModal show={this.state.waitPlayer} playerName={this.state.playerName} onContinue={(() => {\r\n                        this.setState({ waitPlayer: false });\r\n                        this.nextTurn();\r\n                    }).bind(this)} />\r\n                }\r\n                {playersList &&\r\n                    <div className=\"party-list\">\r\n                        <h4>Party</h4>\r\n                        {playersList}\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\r\nimport Playground from '../components/Playground.js';\r\nimport FindCombinations from '../lib/games/bigtwo/findCombinations';\r\nimport Card from '../lib/games/bigtwo/card';\r\nimport Sizes from '../lib/games/bigtwo/sizes';\r\nimport makeCombination from '../lib/games/bigtwo/makeCombination';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport '../../css/bigtwo.css';\r\n\r\nexport default class BigTwoPlayground extends Playground {\r\n\r\n\tconstructor(props){\r\n        super(props, \"bigtwo\");\r\n        this.fc = new FindCombinations();\r\n        this.onPassBtnClicked = this.onPassBtnClicked.bind(this);\r\n        this.onSubmitBtnClicked = this.onSubmitBtnClicked.bind(this);\r\n    }\r\n\r\n    enable() {\r\n        this.setState({\r\n            loading: false\r\n        });\r\n        this.bootDone();\r\n        window.addEventListener(\"resize\", this.resizeEventListener = () => {\r\n            this.resizeBoard();\r\n        });\r\n        this.resizeBoard();\r\n        this.deck = false;\r\n        this.spreadCardsDone = false;\r\n    }\r\n\r\n    disable() {\r\n        window.removeEventListener(\"resize\", this.resizeEventListener);\r\n        clearTimeout(this.timeout);\r\n    }\r\n\r\n    resizeBoard() {\r\n        var calc = window.innerWidth / 1600.0;\r\n        document.getElementById(\"playingcards-board\").style.transform = \"scale(\" + calc + \", \" + calc + \")\";\r\n    }\r\n\r\n    onResponse(resp) {\r\n        console.log(\"Response\");\r\n        console.log(resp);\r\n        if (resp.event === \"newDeck\") {\r\n            this.deck = this.fc.jsonToCards(resp.deck);\r\n            console.log(\"New deck recevied\");\r\n            this.updateAvailableCombinations();\r\n            if (!this.spreadCardsDone) {\r\n                this.spreadCards();\r\n            }\r\n        } else if (resp.event === \"updateDeck\") {\r\n            this.deck = this.fc.jsonToCards(resp.deck);\r\n            console.log(\"Deck update recevied\");\r\n            this.updateAvailableCombinations();\r\n            this.updateDeck();\r\n        } else if (resp.event === \"numberOfCards\") {\r\n            this.numberOfCards = resp.numberOfCards;\r\n            this.updateNumberOfCards();\r\n        } else if (resp.event === \"gameReady\") {\r\n            this.setState({\r\n                displayWaitingPlayers: false\r\n            });\r\n            if (this.isMyTurn()) {\r\n                this.removePlayerLastCards(this.props.client.player);\r\n                this.setState({\r\n                    displayBottomPlayerPassed: false,\r\n                    displayTurnButtons: true\r\n                });\r\n            }\r\n        } else if (resp.event === \"lastCards\") {\r\n            this.setState({\r\n                passBtnDisabled: false\r\n            });\r\n            this.lastPlayer = resp.player;\r\n            \r\n            this.setPassed(resp.player, false);\r\n\r\n            var cards = this.fc.jsonToCards(resp.cards);\r\n            this.lastCombination = makeCombination(cards);\r\n\r\n            if (this.lastPlayer.id !== this.props.client.player.id) {\r\n                this.removePlayerLastCards(this.lastPlayer);\r\n                this.showPlayerLastCards(this.lastPlayer, cards);\r\n            }\r\n\r\n            this.sendGameReady();\r\n        } else if (resp.event === \"lastPassed\") {\r\n            this.setPassed(resp.player, true);\r\n            this.removePlayerLastCards(resp.player);\r\n            this.sendGameReady();\r\n        } else if (resp.event === \"gameOver\") {\r\n            var decks = resp.playerDecks;\r\n            var loc;\r\n            var player;\r\n            for (var key in decks) {\r\n                player = this.getPlayerById(key);\r\n                this.setPassed(player, false);\r\n                this.removePlayerLastCards(this.lastPlayer);\r\n                this.showPlayerLastCards(player, decks[key], true);\r\n            }\r\n\r\n            this.setState({\r\n                winner: resp.winner,\r\n                displayWinner: true\r\n            });\r\n\r\n            setTimeout(() => {\r\n                this.endGame();\r\n            }, 10000);\r\n        } else if (resp.event && resp.event.endsWith(\"Failed\")) {\r\n            alert(\"Code: \" + resp.code + \"\\nError: \" + resp.msg);\r\n        }\r\n    }\r\n\r\n    getPlayerById(playerId) {\r\n        for (var player of this.props.party.players) {\r\n            if (player.id === playerId) {\r\n                return player;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setPassed(player, passed) {\r\n        var loc = this.playerCardsMap[player.id];\r\n        if (loc === \"left-cards\") {\r\n            this.setState({\r\n                displayLeftPlayerPassed: passed\r\n            });\r\n        } else if (loc === \"right-cards\") {\r\n            this.setState({\r\n                displayRightPlayerPassed: passed\r\n            });\r\n        } else if (loc === \"top-cards\") {\r\n            this.setState({\r\n                displayTopPlayerPassed: passed\r\n            });\r\n        } else if (loc === \"bottom-cards\") {\r\n            this.setState({\r\n                displayBottomPlayerPassed: passed\r\n            });\r\n        }\r\n    }\r\n\r\n    updateDeck() {\r\n        var parent = document.getElementById(\"cards-container\");\r\n\r\n        this.unselectAllCards();\r\n        var elements = document.getElementsByClassName(\"bottom-cards\");\r\n\r\n        console.log(elements);\r\n\r\n        var cardIndex;\r\n        var card;\r\n        var halfLength = (6.25 * this.deck.length + 0.52 * (this.deck.length - 1)) * -0.5;\r\n        var calc;\r\n        console.log(\"====== checking elements \");\r\n        var i;\r\n        var el;\r\n\r\n        var toRemove = [];\r\n        for (i = 0; i < elements.length; i++) {\r\n            console.log(\"INDEX: \" + i);\r\n            el = elements[i];\r\n            cardIndex = parseInt(el.getAttribute(\"data-card-index\"));\r\n\r\n            console.log(\"Cardindex: \" + cardIndex);\r\n            console.log(\"decklen: \" + this.deck.length);\r\n\r\n            if (cardIndex >= this.deck.length) {\r\n                console.log(\"remove\");\r\n                console.log(el.style.backgroundImage);\r\n                //el.style.backgroundImage = `url(../../img/playingcards/back.svg)`;\r\n                toRemove.push(el);\r\n            } else {\r\n                card = this.deck[cardIndex];\r\n                calc = halfLength + 6.77 * (cardIndex);\r\n\r\n                el.style.transition = \"all 0.5s\";\r\n                el.style.transform = \"translate(\" + calc + \"em, 15.92em)\";\r\n                el.style.backgroundImage = `url(../../img/playingcards/${card.rank}_of_${card.suit}.svg)`;\r\n            }\r\n        }\r\n        \r\n        var halfLength = 3.125 * (toRemove.length + 1) * 0.5;\r\n        var calc;\r\n        var card;\r\n        for (i = 0; i < toRemove.length; i++) {\r\n            calc = -halfLength + 3.125 * i;\r\n            card = this.myTurnCards[i];\r\n            toRemove[i].classList.add(\"shown-cards\");\r\n            toRemove[i].style.transition = \"all 0.5s ease-in-out\";\r\n            toRemove[i].style.transform = \" translate(\" + calc + \"em, 5.705em)\";\r\n            toRemove[i].style.backgroundImage = `url(../../img/playingcards/${card.rank}_of_${card.suit}.svg)`;\r\n        }\r\n    }\r\n\r\n    sendGameReady() {\r\n        this.request({\r\n            event: \"gameReady\"\r\n        });\r\n    }\r\n\r\n    sendPass() {\r\n        this.request({\r\n            event: \"pass\"\r\n        });\r\n    }\r\n\r\n    sendTurn(cards) {\r\n        this.request({\r\n            event: \"turn\",\r\n            cards: cards\r\n        });\r\n    }\r\n\r\n    startGame() {\r\n        if (this.deck) {\r\n            this.spreadCards();\r\n        }\r\n        this.setState({\r\n            passBtnDisabled: true\r\n        });\r\n    };\r\n\r\n    updateNumberOfCards() {\r\n        var CARDS_LOCATION = [\"left\", \"top\", \"right\"];\r\n        this.playerInfoMap = {};\r\n        this.playerCardsMap = {};\r\n        var partyPlayers = this.props.party.players;\r\n        var myIndex = -1;\r\n        var i;\r\n        for (i = 0; i < partyPlayers.length; i++) {\r\n            if (partyPlayers[i].id === this.props.client.player.id) {\r\n                myIndex = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        var el;\r\n        var player;\r\n        var obj;\r\n        var id;\r\n        for (i = 1; i < 4; i++) {\r\n            player = partyPlayers[(myIndex + i) % 4];\r\n            id = \"playerInfo\" + i\r\n\r\n            obj = {};\r\n            if (i !== 3) {\r\n                obj[id] = player.name + \" (\" + this.numberOfCards[player.id] + \")\";\r\n            } else {\r\n                obj[id] = \"(\" + this.numberOfCards[player.id] + \") \" + player.name;\r\n            }\r\n            this.setState(obj);\r\n\r\n            this.playerInfoMap[player.id] = id;\r\n            this.playerCardsMap[player.id] = CARDS_LOCATION[i - 1] + \"-cards\";\r\n        }\r\n        this.playerCardsMap[this.props.client.player.id] = \"bottom-cards\";\r\n    }\r\n\r\n    removePlayerLastCards(player) {\r\n        var loc = this.playerCardsMap[player.id];\r\n\r\n        console.log(\"Removing for \" + loc + \" from \" + player.name);\r\n\r\n        var parent = document.getElementById(\"cards-container\");\r\n\r\n        var els = document.getElementsByClassName(\"shown-cards\");\r\n        var toRemove = [];\r\n        for (var el of els) {\r\n            console.log(el);\r\n            if (el.classList.contains(loc)) {\r\n                console.log(\"removing\");\r\n                toRemove.push(el);\r\n            }\r\n        }\r\n\r\n        var i;\r\n        for (i = 0; i < toRemove.length; i++) {\r\n            parent.removeChild(toRemove[i]);\r\n        }\r\n    }\r\n\r\n    showPlayerLastCards(player, lastCards, replaceExistingCards = false) {\r\n        this.removePlayerLastCards(player);\r\n\r\n        var parent = document.getElementById(\"cards-container\");\r\n\r\n        var loc = this.playerCardsMap[player.id];\r\n\r\n        var els;\r\n\r\n        if (loc === \"left-cards\") {\r\n            els = document.getElementsByClassName(\"left-cards\");\r\n            var i;\r\n            var calc;\r\n            var card;\r\n            for (i = 0; i < lastCards.length; i++) {\r\n                calc = -35.42 + 3.125 * i + (replaceExistingCards ? -8.33 : 0);\r\n                card = lastCards[i];\r\n                els[i].classList.add(\"shown-cards\");\r\n                els[i].style.transition = \"all 0.5s ease-in-out\";\r\n                els[i].style.transform = \" translate(\" + calc + \"em, 0em)\";\r\n                els[i].style.backgroundImage = `url(../../img/playingcards/${card.rank}_of_${card.suit}.svg)`;\r\n            }\r\n        } else if (loc === \"top-cards\") {\r\n            els = document.getElementsByClassName(\"top-cards\");\r\n            var i;\r\n            var height = -5.705 + (replaceExistingCards ? -10.215 : 0);\r\n            var halfLength = 3.125 * (lastCards.length + 1) * 0.5;\r\n            var calc;\r\n            var card;\r\n            for (i = 0; i < lastCards.length; i++) {\r\n                calc = -halfLength + 3.125 * i;\r\n                card = lastCards[i];\r\n                els[i].classList.add(\"shown-cards\");\r\n                els[i].style.transition = \"all 0.5s ease-in-out\";\r\n                els[i].style.transform = \" translate(\" + calc + \"em, \" + height + \"em)\";\r\n                els[i].style.backgroundImage = `url(../../img/playingcards/${card.rank}_of_${card.suit}.svg)`;\r\n            }\r\n        } else if (loc === \"right-cards\") {\r\n            els = document.getElementsByClassName(\"right-cards\");\r\n            var i;\r\n            var calc;\r\n            var card;\r\n            for (i = 0; i < lastCards.length; i++) {\r\n                calc = 35.42 - 3.125 * i + (replaceExistingCards ? 8.33 : 0);\r\n                card = lastCards[i];\r\n                els[i].classList.add(\"shown-cards\");\r\n                els[i].style.transition = \"all 0.5s ease-in-out\";\r\n                els[i].style.transform = \" translate(\" + calc + \"em, 0em)\";\r\n                els[i].style.backgroundImage = `url(../../img/playingcards/${card.rank}_of_${card.suit}.svg)`;\r\n            }\r\n        }\r\n    }\r\n\r\n    spreadCards() {\r\n        this.spreadCardsDone = true;\r\n        var cards = [];\r\n        var i;\r\n        for (i = 0; i < 52; i++) {\r\n            cards.push(\r\n                <div key={i} className=\"playingcard\" style={{ zIndex: 52 - i }} ></div>\r\n            );\r\n        }\r\n\r\n        this.setState({\r\n            cards: cards\r\n        });\r\n        \r\n        this.timeout = setTimeout(() => {\r\n            var tf;\r\n            var elements = document.getElementsByClassName(\"playingcard\");\r\n            var i;\r\n            var element;\r\n            var c = 0;\r\n            for (i = 1; i <= elements.length; i++) {\r\n                element = elements[i - 1];\r\n                if (i % 4 === 0) {\r\n                    element.classList.add(\"left-cards\");\r\n                    tf = \"translate(-43.75em, 0em) rotate(-180deg)\";\r\n                } else if (i % 4 === 1) {\r\n                    element.classList.add(\"top-cards\");\r\n                    tf = \"translate(0em, -15.92em) rotate(-180deg)\";\r\n                } else if (i % 4 === 2) {\r\n                    element.classList.add(\"right-cards\");\r\n                    tf = \"translate(43.75em, 0em) rotate(180deg)\";\r\n                } else {\r\n                    element.classList.add(\"bottom-cards\");\r\n                    //tf = \"translate(0em, 15.92em) rotate(180deg)\";\r\n                    var calc = -40.62 + 6.77 * (c);\r\n                    tf = \"translate(\" + calc + \"em, 15.92em)\";\r\n                    element.setAttribute(\"data-card-index\", c);\r\n\r\n                    element.addEventListener(\"mouseover\", (evt) => {\r\n                        evt.stopImmediatePropagation();\r\n                        var el = evt.target;\r\n\r\n                        if (el.classList.contains(\"shown-cards\")) {\r\n                            return;\r\n                        }\r\n\r\n                        var selected = el.getAttribute(\"data-card-selected\");\r\n\r\n                        if (selected === \"true\") {\r\n                            return;\r\n                        }\r\n\r\n                        el.style.transition = \"all 0.2s ease-in-out\";\r\n\r\n                        var tf = el.style.transform.split(\") \")[0];\r\n\r\n                        if (tf !== el.style.transform) {\r\n                            tf += \")\";\r\n                        }\r\n\r\n                        el.style.transform = tf + \" translate(0em, -0.78125em)\";\r\n                    });\r\n\r\n                    element.addEventListener(\"mouseout\", (evt) => {\r\n                        evt.stopImmediatePropagation();\r\n                        var el = evt.target;\r\n\r\n                        var selected = el.getAttribute(\"data-card-selected\");\r\n\r\n                        if (selected === \"true\") {\r\n                            return;\r\n                        }\r\n\r\n                        el.style.transition = \"all 0.2s ease-in-out\";\r\n\r\n                        var tf = el.style.transform.split(\") \")[0];\r\n\r\n                        if (tf !== el.style.transform) {\r\n                            tf += \")\";\r\n                        }\r\n\r\n                        el.style.transform = tf;\r\n                    });\r\n\r\n                    element.addEventListener(\"click\", (evt) => {\r\n                        evt.stopImmediatePropagation();\r\n\r\n                        var el = evt.target;\r\n\r\n                        if (el.classList.contains(\"shown-cards\")) {\r\n                            return;\r\n                        }\r\n\r\n                        var selected = el.getAttribute(\"data-card-selected\");\r\n\r\n                        if (selected === \"true\") {\r\n                            this.unselectCardElement(el);\r\n                        } else {\r\n                            this.selectCardElement(el);\r\n                        }\r\n                    });\r\n\r\n                    var card = this.deck[c];\r\n                    element.style.backgroundImage = `url(../../img/playingcards/${card.rank}_of_${card.suit}.svg)`;\r\n                    c++;\r\n                }\r\n                element.style.transition = \"all 0.5s \" + Math.round(0.025 * i * 100) / 100 + \"s\";\r\n                element.style.transform = tf;\r\n            }\r\n            \r\n            this.timeout = setTimeout(() => {\r\n                this.setState({\r\n                    displayNumberOfCards: true,\r\n                    displayCombinationButtons: true,\r\n                    displayWaitingPlayers: true\r\n                });\r\n                this.sendGameReady();\r\n            }, 2000);\r\n        }, 1000);\r\n    }\r\n\r\n    updateAvailableCombinations() {\r\n        this.setState({\r\n            availableCombinations: this.fc.findAll(this.deck)\r\n        });\r\n    }\r\n\r\n    selectCardElement(el) {\r\n        el.style.transition = \"all 0.2s ease-in-out\";\r\n\r\n        var tf = el.style.transform.split(\") \")[0];\r\n\r\n        if (tf !== el.style.transform) {\r\n            tf += \")\";\r\n        }\r\n\r\n        el.style.transform = tf + \" translate(0em, -1.5625em)\";\r\n        el.setAttribute(\"data-card-selected\", \"true\");\r\n    }\r\n\r\n    unselectCardElement(el) {\r\n        el.style.transition = \"all 0.2s ease-in-out\";\r\n\r\n        var tf = el.style.transform.split(\") \")[0];\r\n\r\n        if (tf !== el.style.transform) {\r\n            tf += \")\";\r\n        }\r\n\r\n        el.style.transform = tf;\r\n        el.setAttribute(\"data-card-selected\", \"false\");\r\n    }\r\n\r\n    selectCombination(combName) {\r\n        this.unselectAllCards();\r\n\r\n        if (this.lastSelectCombinationName === combName) {\r\n            this.lastSelectCombinationCount++;\r\n        } else {\r\n            this.lastSelectCombinationName = combName;\r\n            this.lastSelectCombinationCount = 0;\r\n        }\r\n\r\n        var matches = this.state.availableCombinations[combName];\r\n\r\n        if (this.lastSelectCombinationCount === matches.length) {\r\n            this.lastSelectCombinationName = false;\r\n            this.lastSelectCombinationCount = 0;\r\n            this.unselectAllCards();\r\n            return;\r\n        }\r\n\r\n        var match = matches[this.lastSelectCombinationCount];\r\n\r\n        var cardEl;\r\n        for (var matchCard of match) {\r\n            cardEl = this.findCardElement(matchCard.index);\r\n            if (cardEl) {\r\n                this.selectCardElement(cardEl);\r\n            } else {\r\n                console.warn(\"Cannot find card index \" + matchCard.index);\r\n            }\r\n        }\r\n    }\r\n\r\n    unselectAllCards() {\r\n        var elements = document.getElementsByClassName(\"bottom-cards\");\r\n        for (var el of elements) {\r\n            this.unselectCardElement(el);\r\n        }\r\n    }\r\n\r\n    findCardElement(index) {\r\n        var elements = document.getElementsByClassName(\"bottom-cards\");\r\n        var cardIndex;\r\n        for (var el of elements) {\r\n            cardIndex = parseInt(el.getAttribute(\"data-card-index\"));\r\n            if (cardIndex === index) {\r\n                return el;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onPassBtnClicked() {\r\n        if (!this.lastPlayer || !this.lastCombination) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            displayTurnButtons: false\r\n        });\r\n        this.sendPass();\r\n    }\r\n\r\n    onSubmitBtnClicked() {\r\n        this.setState({\r\n            displayTurnButtons: false\r\n        });\r\n\r\n        var cards = this.getSelectedCards();\r\n        if (!this.lastPlayer || !this.lastCombination) {\r\n            var d3Found = false;\r\n            for (var card of cards) {\r\n                if (card.suit === \"diamonds\" && card.rank === \"3\") {\r\n                    d3Found = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!d3Found) {\r\n                alert(\"First turn cards must include a Diamond-3 card.\");\r\n                this.setState({\r\n                    displayTurnButtons: true\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        var combination = makeCombination(cards);\r\n\r\n        if (!combination) {\r\n            alert(\"Invalid combination.\");\r\n            this.setState({\r\n                displayTurnButtons: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (this.lastCombination && this.lastPlayer.id !== this.props.client.player.id) {\r\n            if (this.lastCombination.combinationName !== combination.combinationName) {\r\n                alert(\"Combination type is not the same the last combination type.\");\r\n                this.setState({\r\n                    displayTurnButtons: true\r\n                });\r\n                return;\r\n            }\r\n\r\n            var compare = combination.compare(this.lastCombination);\r\n            if (compare <= 0) {\r\n                alert(\"Your combination has to be larger than the last combination.\");\r\n                this.setState({\r\n                    displayTurnButtons: true\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.sendTurn(cards);\r\n        this.myTurnCards = cards;\r\n    }\r\n\r\n    getSelectedCards() {\r\n        var els = document.getElementsByClassName(\"bottom-cards\");\r\n        var out = [];\r\n        var cardIndex;\r\n        for (var el of els) {\r\n            if (el.getAttribute(\"data-card-selected\") === \"true\") {\r\n                cardIndex = parseInt(el.getAttribute(\"data-card-index\"));\r\n                out.push(this.deck[cardIndex]);\r\n            }\r\n        }\r\n        return out;\r\n    }\r\n\r\n    renderPlayground() {\r\n        var results = {};\r\n        if (this.state.availableCombinations) {\r\n            for (var key of Sizes.FIVE_CARD_HANDS) {\r\n                results[key] = this.state.availableCombinations[key] && this.state.availableCombinations[key].length > 0;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"board\" id=\"playingcards-board\">\r\n                <div className=\"playingcards\" id=\"cards-container\">\r\n                    {this.state.displayWinner &&\r\n                        <div className=\"waiting-players align-items-center justify-items-center\">\r\n                            Winner: {this.state.winner.name}\r\n                        </div>\r\n                    }\r\n                    {this.state.displayWaitingPlayers &&\r\n                        <div className=\"waiting-players align-items-center justify-items-center\">\r\n                            Waiting other players...\r\n                        </div>\r\n                    }\r\n                    {this.state.displayLeftPlayerPassed &&\r\n                        <div className=\"left-player-passed align-items-center justify-items-center\">\r\n                            Passed\r\n                        </div>\r\n                    }\r\n                    {this.state.displayTopPlayerPassed &&\r\n                        <div className=\"top-player-passed align-items-center justify-items-center\">\r\n                            Passed\r\n                        </div>\r\n                    }\r\n                    {this.state.displayRightPlayerPassed &&\r\n                        <div className=\"right-player-passed align-items-center justify-items-center\">\r\n                            Passed\r\n                        </div>\r\n                    }\r\n                    {this.state.displayBottomPlayerPassed &&\r\n                        <div className=\"bottom-player-passed align-items-center justify-items-center\">\r\n                            Passed\r\n                        </div>\r\n                    }\r\n                    {this.state.displayNumberOfCards &&\r\n                        <>\r\n                            <div className=\"player1\">\r\n                                <p>{this.state.playerInfo1}</p>\r\n                            </div>\r\n                            <div className=\"player2\">\r\n                                <p>{this.state.playerInfo2}</p>\r\n                            </div>\r\n                            <div className=\"player3\">\r\n                                <p>{this.state.playerInfo3}</p>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                    {this.state.displayTurnButtons &&\r\n                        <div className=\"turn-buttons\">\r\n                            <ButtonGroup>\r\n                                <Button variant=\"primary\" id=\"pass-btn\" onClick={this.onPassBtnClicked}><i className=\"fas fa-forward\" disabled={this.state.passBtnDisabled}></i> Pass</Button>\r\n                                <Button variant=\"warning\" id=\"hint-btn\" disabled={true}><i className=\"far fa-lightbulb\"></i> Hint</Button>\r\n                                <Button variant=\"success\" id=\"submit-btn\" onClick={this.onSubmitBtnClicked}><i className=\"fas fa-check\"></i> Submit</Button>\r\n                            </ButtonGroup>\r\n                        </div>\r\n                    }\r\n                    {this.state.displayCombinationButtons &&\r\n                        <div className=\"combination-buttons\">\r\n                            <ButtonGroup>\r\n                                <Button variant={results[\"straight\"] ? \"success\" : \"secondary\"} id=\"straight-btn\" disabled={!results[\"straight\"]} onClick={() => { this.selectCombination(\"straight\") }}>Straight</Button>\r\n                            <Button variant={results[\"flush\"] ? \"success\" : \"secondary\"} id=\"flush-btn\" disabled={!results[\"flush\"]} onClick={() => { this.selectCombination(\"flush\") }}>Flush</Button>\r\n                                <Button variant={results[\"fullHouse\"] ? \"success\" : \"secondary\"} id=\"full-house-btn\" disabled={!results[\"fullHouse\"]} onClick={() => { this.selectCombination(\"fullHouse\") }}>Full House</Button>\r\n                                <Button variant={results[\"fourOfAKind\"] ? \"success\" : \"secondary\"} id=\"four-of-a-kind-btn\" disabled={!results[\"fourOfAKind\"]}  onClick={() => { this.selectCombination(\"fourOfAKind\") }}>Four Of A Kind</Button>\r\n                                <Button variant={results[\"straightFlush\"] ? \"success\" : \"secondary\"} id=\"straight-flush-btn\" disabled={!results[\"straightFlush\"]}  onClick={() => { this.selectCombination(\"straightFlush\") }}>Straight Flush</Button>\r\n                            </ButtonGroup>\r\n                        </div>\r\n                    }\r\n                    {this.state.cards}\r\n                </div>\r\n            </div>\r\n        );\r\n\t}\r\n\r\n}","import React from 'react';\r\nimport { Container, ButtonGroup, Button } from 'react-bootstrap';\r\n\r\nexport default function (props) {\r\n    var verti = [];\r\n    var hori;\r\n    var numbers = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\r\n    var i;\r\n    var j;\r\n    var enabled;\r\n    for (i = 0; i < numbers.length; i++) {\r\n        hori = [];\r\n        for (j = 0; j < numbers[i].length; j++) {\r\n            if (props.enabled && props.enabled.length !== 0) {\r\n                enabled = props.enabled.includes(numbers[i][j]);\r\n            } else {\r\n                enabled = false;\r\n            }\r\n            hori.push(\r\n                <Button variant={enabled ? \"outline-secondary\" : \"secondary\"} className=\"py-3 touch-keypad-key touch-keypad-value\" key={i + \"-\" + j} onClick={props.onNumberClick} disabled={!enabled}>{numbers[i][j]}</Button>\r\n            );\r\n        }\r\n        verti.push(\r\n            <ButtonGroup key={i}>\r\n                {hori}\r\n            </ButtonGroup>\r\n        );\r\n    }\r\n    return (\r\n        <Container fluid={true} className=\"touch-keypad row\" style={{display: props.show ? \"\" : \"none\"}}>\r\n            <ButtonGroup vertical={true}>\r\n                {verti}\r\n                <ButtonGroup>\r\n                    <Button variant=\"primary\" className=\"py-3 touch-keypad-key touch-keypad-function touch-keypad-function-done\" disabled={!props.doneEnabled} onClick={props.onDoneClick}><i className=\"fas fa-check\"></i></Button>\r\n                    <Button variant={props.enabled && props.enabled.includes(0) ? \"outline-secondary\" : \"secondary\"} className=\"py-3 touch-keypad-key touch-keypad-value\" onClick={props.onNumberClick} disabled={!(props.enabled && props.enabled.includes(0))}>0</Button>\r\n                    <Button variant=\"warning\" className=\"py-3 touch-keypad-key touch-keypad-function touch-keypad-function-backspace\" disabled={!props.backspaceEnabled} onClick={props.onBackspaceClick}><i className=\"fas fa-backspace\"></i></Button>\r\n                </ButtonGroup>\r\n            </ButtonGroup>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport Playground from '../components/Playground.js';\r\nimport NumericKeypad from '../components/NumericKeypad';\r\nimport '../../css/guessnum.css';\r\n\r\nconst DEFAULT_MAXIMUM = 100;\r\n\r\nexport default class GuessNumberPlayground extends Playground {\r\n\r\n\tconstructor(props){\r\n        super(props, \"guessnum\");\r\n        this.maximum = DEFAULT_MAXIMUM;\r\n        this.randCount = 0;\r\n        this.guess = this.guess.bind(this);\r\n    }\r\n\r\n    enable() {\r\n        this.setState({\r\n            loading: false,\r\n            homeScreen: false,\r\n            gameScreen: false,\r\n            keypadDisplay: false,\r\n            funcKeyEnable: false,\r\n            keypad: true,\r\n            text: 0,\r\n            numberMin: 1,\r\n            numberMax: this.maximum,\r\n            enabledKeys: [],\r\n            numberMin: -1,\r\n            numberMax: -1\r\n        });\r\n        this.bootDone();\r\n    }\r\n\r\n    disable() {\r\n        clearInterval(this.interval);\r\n        document.getElementsByTagName(\"body\")[0].classList.remove(\"guessnum-correct\");\r\n        clearTimeout(this.timeout);\r\n    }\r\n\r\n    onResponse(resp) {\r\n        console.log(\"RESPONSE\");\r\n        console.log(resp);\r\n        if (resp.event === \"numberMinMax\") {\r\n            this.setState({\r\n                numberMin: resp.min,\r\n                numberMax: resp.max\r\n            });\r\n        } else if (resp.event === \"newGuess\") {\r\n            if (this.state.text === \"?\") {\r\n                this.setState({\r\n                    text: 0\r\n                });\r\n            }\r\n\r\n            var state = {\r\n                numberMin: resp.min,\r\n                numberMax: resp.max,\r\n                lastGuess: resp.number,\r\n                success: resp.success\r\n            };\r\n\r\n            if (this.state.countDone) {\r\n                this.setState(state);\r\n                this.countUpDownTo(resp.number);\r\n            } else {\r\n                this.awaitNumbers.push(state);\r\n            }\r\n        }\r\n    }\r\n\r\n    startGame() {\r\n        clearTimeout(this.timeout);\r\n        this.setState({\r\n            homeScreen: false,\r\n            gameScreen: true,\r\n            countDone: false\r\n        });\r\n        this.awaitNumbers = [];\r\n        this.disableInput();\r\n        this.fakeRandom();\r\n    };\r\n\r\n    fakeRandom() {\r\n        var rand = Math.floor(Math.random() * this.maximum);\r\n        this.setState({ text: rand });\r\n        this.randCount++;\r\n        if (this.randCount < 50 || this.state.numberMin === -1 || this.state.numberMax === -1) {\r\n            this.timeout = setTimeout(function () {\r\n                this.fakeRandom();\r\n            }.bind(this), 25);\r\n        } else {\r\n            this.randCount = 0;\r\n            this.setState({ text: \"?\", countDone: true });\r\n            if (this.isMyTurn()) {\r\n                this.enableInput();\r\n            }\r\n        }\r\n    }\r\n\r\n    countUpDownTo(to) {\r\n        this.setState({ countDone: false });\r\n        var from = this.state.text;\r\n        var i;\r\n        if (to > from) {\r\n            this.setState({ text: from + 1 });\r\n            this.timeout = setTimeout(function () {\r\n                this.countUpDownTo(to);\r\n            }.bind(this), 750 / (to - from));\r\n        } else if (to < from) {\r\n            this.setState({ text: from - 1 });\r\n            this.timeout = setTimeout(function () {\r\n                this.countUpDownTo(to);\r\n            }.bind(this), 750 / (from - to));\r\n        } else if (this.state.success) {\r\n            this.setState({ gameScreen: false, resultScreen: true });\r\n            this.interval = setInterval(function () {\r\n                var cl = document.getElementsByTagName(\"body\")[0].classList;\r\n                if (cl.contains(\"guessnum-correct\")) {\r\n                    cl.remove(\"guessnum-correct\");\r\n                } else {\r\n                    cl.add(\"guessnum-correct\");\r\n                }\r\n            }, 1000);\r\n            this.timeout = setTimeout(() => {\r\n                this.endGame();\r\n            }, 10000);\r\n            return;\r\n        } else if (this.awaitNumbers.length > 0) {\r\n            var state = this.awaitNumbers.shift();\r\n            this.setState(state);\r\n            this.countUpDownTo(state.lastGuess);\r\n        } else {\r\n            this.setState({ countDone: true });\r\n            if (this.isMyTurn()) {\r\n                this.enableInput();\r\n            }\r\n        }\r\n    }\r\n\r\n    enableInput() {\r\n        if (!this.state.keypad) {\r\n            document.getElementById(\"guess-number-field\").disabled = false;\r\n            document.getElementById(\"guess-number-field\").focus();\r\n        }\r\n        document.getElementById(\"guess-btn\").disabled = false;\r\n        this.setState({ keypadDisplay: this.state.keypad, funcKeyEnable: true, enabledKeys: [1, 2, 3, 4, 5, 6, 7, 8, 9, 0] });\r\n        //this.updateKeypad();\r\n    }\r\n\r\n    disableInput() {\r\n        document.getElementById(\"guess-number-field\").disabled = true;\r\n        document.getElementById(\"guess-btn\").disabled = true;\r\n        this.setState({ keypadDisplay: false, funcKeyEnable: false, enabledKeys: [] });\r\n    }\r\n\r\n    myTurn() {\r\n        if (this.state.countDone) {\r\n            this.enableInput();\r\n        }\r\n    }\r\n\r\n    guess() {\r\n        this.disableInput();\r\n        var guessStr = document.getElementById(\"guess-number-field\").value;\r\n        if (guessStr === \"\") {\r\n            this.enableInput();\r\n            this.setState({ error: \"It cannot be blank.\" });\r\n            document.getElementById(\"guess-btn\").disabled = false;\r\n            return;\r\n        }\r\n        var guess = parseInt(guessStr);\r\n        if (isNaN(guess)) {\r\n            this.enableInput();\r\n            this.setState({ error: \"It must be an integer.\" })\r\n            return;\r\n        }\r\n\r\n        if (guess >= this.state.numberMax) {\r\n            this.enableInput();\r\n            this.setState({ error: \"It cannot be larger than the maximum value.\" });\r\n            return;\r\n        } else if (guess <= this.state.numberMin) {\r\n            this.enableInput();\r\n            this.setState({ error: \"It cannot be less than the minimum value.\" });\r\n            return;\r\n        }\r\n\r\n        this.setState({ error: \"\" });\r\n\r\n        this.request({\r\n            event: \"guess\",\r\n            number: guess\r\n        });\r\n\r\n        document.getElementById(\"guess-number-field\").value = \"\";\r\n    }\r\n\r\n    renderPlayground() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.gameScreen &&\r\n                    <div className=\"d-flex flex-column align-items-center justify-content-center guessnum-home-screen\">\r\n                        <p className=\"display-2\">{this.state.text}</p>\r\n                        <p className=\"display-4\">{this.state.numberMin} - {this.state.numberMax}</p>\r\n                        <br />\r\n                        <InputGroup className=\"ml-8 mr-8\">\r\n                            <FormControl\r\n                                id=\"guess-number-field\"\r\n                                type=\"number\"\r\n                                placeholder=\"Your Guess\"\r\n                                aria-label=\"Your Guess\"\r\n                                onKeyPress={(evt) => {\r\n                                    if (evt.key === \"Enter\") {\r\n                                        this.guess();\r\n                                    }\r\n                                }}\r\n                                disabled\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <Button variant=\"success\" id=\"guess-btn\" onClick={this.guess}>Guess</Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <br />\r\n                        <p className=\"text-danger\">{this.state.error}</p>\r\n                    </div>\r\n                }\r\n                {\r\n                    this.state.resultScreen &&\r\n                    <div className=\"d-flex flex-column align-items-center justify-content-center guessnum-home-screen\">\r\n                        <p className=\"display-2\">{this.state.text}</p>\r\n                        <p className=\"display-4 text-success\">Bingo!</p>\r\n                        {this.props.party.players.length > 1 &&\r\n                            <p>Winner: <b>{this.getTurnPlayer().name}</b></p>\r\n                        }\r\n                        <br />\r\n                        <p>You will be redirected back to the party dialog very soon.</p>\r\n                    </div>\r\n                }\r\n                <NumericKeypad show={this.state.keypadDisplay} enabled={this.state.enabledKeys} doneEnabled={this.state.funcKeyEnable} backspaceEnabled={this.state.funcKeyEnable} onNumberClick={(evt) => {\r\n                    evt.preventDefault();\r\n                    console.log(\"Click num\");\r\n                    var val = evt.target.innerHTML;\r\n                    document.getElementById(\"guess-number-field\").value = document.getElementById(\"guess-number-field\").value + val;\r\n                    //this.updateKeypad();\r\n                }} onDoneClick={(evt) => {\r\n                    evt.preventDefault();\r\n                    console.log(\"Click done\");\r\n                    this.guess();\r\n                }} onBackspaceClick={(evt) => {\r\n                    evt.preventDefault();\r\n                    console.log(\"Click bs\");\r\n                    document.getElementById(\"guess-number-field\").value = document.getElementById(\"guess-number-field\").value.slice(0, -1);\r\n                    //this.updateKeypad();\r\n                }} />\r\n            </div>\r\n        );\r\n\t}\r\n\r\n}","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport BigTwoPlayground from '../playgrounds/BigTwoPlayground'\r\n/*\r\nimport RoyalPlayground from '../playgrounds/RoyalPlayground'\r\nimport TwentyOnePlayground from '../playgrounds/TwentyOnePlayground'\r\n*/\r\nimport GuessNumberPlayground from '../playgrounds/GuessNumberPlayground'\r\n/*\r\nimport GuessBigPlayground from '../playgrounds/GuessBigPlayground'\r\n*/\r\n\r\nconst Def = {\r\n    \"bigtwo\": {\r\n        instance: BigTwoPlayground,\r\n        icon: \"fas fa-heart\",\r\n        name: \"Big Two\",\r\n        minPlayers: 4,\r\n        maxPlayers: 4\r\n    },\r\n    /*\r\n    \"royal\": {\r\n        instance: RoyalPlayground,\r\n        icon: \"fas fa-grin-stars\",\r\n        name: \"Royal\",\r\n        minPlayers: 1,\r\n        maxPlayers: 4\r\n    },\r\n    \"twentyone\": {\r\n        instance: TwentyOnePlayground,\r\n        icon: \"fas fa-sort-numeric-down\",\r\n        name: \"Twenty-one\",\r\n        minPlayers: 1,\r\n        maxPlayers: 4\r\n    },\r\n    */\r\n    \"guessnum\": {\r\n        instance: GuessNumberPlayground,\r\n        icon: \"fas fa-list-ol\",\r\n        name: \"Guess Number\",\r\n        minPlayers: 1,\r\n        maxPlayers: 10\r\n    }\r\n    /*,\r\n    \"guessbig\": {\r\n        instance: GuessBigPlayground,\r\n        icon: \"fas fa-dice\",\r\n        name: \"Guess Big\",\r\n        minPlayers: 1,\r\n        maxPlayers: 4\r\n    }\r\n    */\r\n};\r\n\r\nexport function isGameExist(gameId) {\r\n    return Def[gameId] !== undefined;\r\n}\r\n\r\nexport function getInstance(gameId) {\r\n    return Def[gameId].instance;\r\n}\r\n\r\nexport function getIcon(gameId) {\r\n    return Def[gameId].icon;\r\n}\r\n\r\nexport function getMinimumPlayers(gameId) {\r\n    return Def[gameId].minPlayers;\r\n}\r\n\r\nexport function getMaximumPlayers(gameId) {\r\n    return Def[gameId].maxPlayers;\r\n}\r\n\r\nexport function makeGameButton(gameId, disabled, onClickFunc) {\r\n    return <Button key={gameId} variant=\"secondary\" disabled={disabled} onClick={() => {\r\n        onClickFunc(gameId);\r\n    }}><i className={Def[gameId].icon + \" fa-2x\"}></i><br />{Def[gameId].name}</Button>\r\n}\r\n\r\nexport function listOfGameButtons(startGameFunc) {\r\n    var out = [];\r\n    for (var gameKey in Def) {\r\n        out.push(\r\n            makeGameButton(gameKey, false, startGameFunc)\r\n        );\r\n    }\r\n    return out;\r\n}","import React from 'react';\r\nimport { Modal, Button, ButtonGroup, InputGroup, FormControl, Form } from 'react-bootstrap';\r\nimport * as Games from './Games';\r\n\r\nexport default function(props) {\r\n    return (\r\n        <Modal show={props.show} animation={false} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Play³ ({VERSION})</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <label>Nickname:</label>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        id=\"nickname-field\"\r\n                        placeholder=\"Nickname\"\r\n                        aria-label=\"Nickname\"\r\n                        aria-describedby=\"party-code-field-addon\"\r\n                    />\r\n                </InputGroup>\r\n                <hr />\r\n                <label>Join a party:</label>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        id=\"party-code-field\"\r\n                        placeholder=\"Party Code\"\r\n                        aria-label=\"Party Code\"\r\n                        aria-describedby=\"party-code-field-addon\"\r\n                    />\r\n                    <InputGroup.Append>\r\n                        <Button variant=\"success\" onClick={props.joinGame}>Join</Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n                <div className=\"d-flex\">\r\n                    <Button variant=\"success\" className=\"btn-block\">Quick join</Button>\r\n                    <Button variant=\"secondary\" className=\"ml-2\"><i className=\"fas fa-cog\"></i></Button>\r\n                </div>\r\n                <hr />\r\n                <p>Start a new game:</p>\r\n                <div className=\"hori-scroll\">\r\n                    {Games.listOfGameButtons(props.startGame)}\r\n                </div>\r\n                <Form.Check\r\n                    type=\"switch\"\r\n                    id=\"local-mode-switch\"\r\n                    label=\"Start game locally\"\r\n                    checked={false}\r\n                    disabled\r\n                />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import React from 'react';\r\nimport { Modal, Button, ButtonGroup, InputGroup, FormControl, Form, Table, Spinner } from 'react-bootstrap';\r\nimport * as Games from './Games';\r\n\r\nfunction playersFalseInList(players, list) {\r\n    var c = 0;\r\n    for (var player of players) {\r\n        if (player.online && !list[player.id]) {\r\n            c++;\r\n        }\r\n    }\r\n    return c;\r\n}\r\n\r\nexport default function (props) {\r\n    var i;\r\n    var id;\r\n    var admin = props.party.admin;\r\n    var partyPlayers = props.party.players;\r\n    var playerList = [];\r\n    for (i = 0; i < partyPlayers.length; i++) {\r\n        id = partyPlayers[i][\"id\"];\r\n\r\n        playerList.push(\r\n            <tr key={id}>\r\n                <td>{i + 1}</td>\r\n                <td><span className={partyPlayers[i].online ? \"\" : \"text-secondary\"}>{id === admin.id ? \"👑 \" : \"\"}{partyPlayers[i][\"name\"]} {partyPlayers[i].aiMode ? \"(AI)\" : \"\"} {props.gameInitReadyList[id] || !partyPlayers[i].online ? (props.playerReadyList[id] ? \"✔️\" : \"\") : <Spinner animation=\"border\" role=\"status\" size=\"sm\"></Spinner>}</span></td>\r\n                <td>{id === admin.id && <Button variant=\"danger\" onClick={() => {\r\n                    props.client.kickPlayer(id);\r\n                }}>Kick</Button>}</td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    var gameMinPlayers = Games.getMinimumPlayers(props.party.gameId);\r\n    var gameMaxPlayers = Games.getMaximumPlayers(props.party.gameId);\r\n\r\n    var startBtnVariant;\r\n    var startBtnDisabled;\r\n    var startBtnText;\r\n    var startBtnClickFunc;\r\n    if (playersFalseInList(partyPlayers, props.gameInitReadyList) > 0) {\r\n        startBtnVariant = \"secondary\";\r\n        startBtnDisabled = true;\r\n        startBtnText = \"Awaiting all players to boot game\";\r\n    } else {\r\n        if (props.playerReadyList[props.player.id]) {\r\n            if (props.player.id === admin.id) {\r\n                var notReady = playersFalseInList(partyPlayers, props.playerReadyList);\r\n                if (notReady > 0) {\r\n                    startBtnVariant = \"secondary\";\r\n                    startBtnDisabled = true;\r\n                    startBtnText = (partyPlayers.length - notReady) + \"/\" + partyPlayers.length + \" players ready\";\r\n                } else if (partyPlayers.length < gameMinPlayers) {\r\n                    startBtnVariant = \"secondary\";\r\n                    startBtnDisabled = true;\r\n                    startBtnText = \"Not enough players\";\r\n                } else {\r\n                    startBtnVariant = \"success\";\r\n                    startBtnDisabled = false;\r\n                    startBtnText = \"Start Game\";\r\n                    startBtnClickFunc = () => {\r\n                        props.client.startGame();\r\n                    };\r\n                }\r\n            } else {\r\n                startBtnVariant = \"warning\";\r\n                startBtnDisabled = false;\r\n                startBtnText = \"Unready\";\r\n                startBtnClickFunc = () => {\r\n                    props.client.playerUnready();\r\n                };\r\n            }\r\n        } else {\r\n            startBtnVariant = \"success\";\r\n            startBtnDisabled = false;\r\n            startBtnText = \"Ready\";\r\n            startBtnClickFunc = () => {\r\n                props.client.playerReady();\r\n            };\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Modal show={props.show} animation={false} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Party</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"d-flex\">\r\n                    {Games.makeGameButton(props.party.gameId, !props.playgroundBootDone || props.player.id !== admin.id, () => { })}\r\n                    <div className=\"container\">\r\n                        <span>Party Code:</span>\r\n                        <h2>{props.party.partyId}</h2>\r\n                        <InputGroup className=\"mb-2\">\r\n                            <FormControl\r\n                                id=\"share-link\"\r\n                                value={\"https://playplayplay.ml/?\" + props.party.partyId}\r\n                                readOnly\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <Button variant=\"primary\" onClick={() => {\r\n                                    var url = document.getElementById(\"share-link\").value;\r\n                                    if (navigator.share) {\r\n                                        navigator.share({\r\n                                            url: url\r\n                                        });\r\n                                    } else {\r\n                                        prompt(\"Your browser does not support sharing. Please copy the URL below and share it to your friends.\", url);\r\n                                    }\r\n                                }}><i className=\"fas fa-share-square\"></i> Share</Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <p className=\"mb-2\">{props.playgroundBootDone ? \"The game requires at least \" + gameMinPlayers + \" player(s) and at maximum \" + gameMaxPlayers + \" player(s).\" + (props.player.id === admin.id ? \" Click on the icon to change game.\" : \"\") : \"Loading...\"} </p>\r\n                        <Button variant={startBtnVariant} onClick={startBtnClickFunc} block disabled={startBtnDisabled}>{startBtnText}</Button>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Nickname</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {playerList}\r\n                    </tbody>\r\n                </Table>\r\n                {\r\n                    props.player.id === admin.id &&\r\n                    <Button variant=\"success\" onClick={() => {\r\n                        var playerName = prompt(\"AI Player Name:\");\r\n                        props.client.addAi(playerName);\r\n                    }} block><i className=\"fas fa-plus\"></i> Add computer (AI)</Button>\r\n                }\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import io from 'socket.io-client';\r\n\r\nexport default class Client {\r\n\r\n    constructor(endPoint) {\r\n        this.endPoint = endPoint;\r\n        this.player = false;\r\n        this.party = false;\r\n        this.token = false;\r\n        this.gameInitReadyList = {};\r\n        this.playerReadyList = {};\r\n        this.listeners = {};\r\n        this.initializeSocket();\r\n    }\r\n\r\n    initializeSocket() {\r\n        this.socket = io(this.endPoint);\r\n        this.socket.on(\"party\", (data) => {\r\n            console.log(data);\r\n            if (data.event === \"partyJoined\") {\r\n                this.player = data.player;\r\n                this.token = data.token;\r\n                this.party = data.party;\r\n            } else if (data.event === \"gameInitReady\") {\r\n                this.gameInitReadyList = data.gameInitReady;\r\n            } else if (data.event === \"playerReady\") {\r\n                this.playerReadyList = data.playerReady;\r\n            } else if (this.party && data.event === \"playerListChanged\") {\r\n                this.party.players = data.players;\r\n            } else if (this.party && data.event === \"gameChanged\") {\r\n                this.party.gameId = data.gameId;\r\n            } else if (this.party && data.event === \"playerChanged\") {\r\n                console.warn(\"Handle player changed\");\r\n            } else if (this.party && data.event === \"adminChanged\") {\r\n                this.party.admin = data.admin;\r\n            }\r\n            this.dispatch(\"party\", data);\r\n        });\r\n        this.socket.on(\"game\", (data) => {\r\n            this.dispatch(\"game\", data);\r\n        });\r\n        this.socket.on(\"chat\", (data) => {\r\n            this.dispatch(\"chat\", data);\r\n        });\r\n    }\r\n\r\n    on(event, listener) {\r\n        if (!this.listeners[event]) {\r\n            this.listeners[event] = [];\r\n        }\r\n        this.listeners[event].push(listener);\r\n    }\r\n\r\n    off(event, listener) {\r\n        if (!this.listeners[event]) {\r\n            return false;\r\n        }\r\n        var array = this.listeners[event];\r\n        var index = array.indexOf(listener);\r\n\r\n        if (index === -1) {\r\n            return false;\r\n        }\r\n\r\n        array.splice(index, 1);\r\n        return true;\r\n    }\r\n\r\n    dispatch(event, data) {\r\n        if (!this.listeners[event]) {\r\n            return;\r\n        }\r\n\r\n        var array = this.listeners[event];\r\n        for (var listener of array) {\r\n            listener(data, this);\r\n        }\r\n    }\r\n\r\n    socketEmit(event, data) {\r\n        this.socket.emit(event, data);\r\n    }\r\n\r\n    addAi(playerName) {\r\n        this.socketEmit(\"party\", {\r\n            event: \"addAi\",\r\n            token: this.token,\r\n            playerId: this.player.id,\r\n            partyId: this.party.partyId,\r\n            playerName: playerName\r\n        });\r\n    }\r\n\r\n    gameRequest(req) {\r\n        this.socketEmit(\"game\", {\r\n            token: this.token,\r\n            partyId: this.party.partyId,\r\n            playerId: this.player.id,\r\n            request: req\r\n        });\r\n    }\r\n\r\n    createParty(nickName, gameId) {\r\n        this.socketEmit(\"party\", {\r\n            event: \"create\",\r\n            gameId: gameId,\r\n            playerName: nickName\r\n        });\r\n    }\r\n\r\n    joinParty(nickName, partyId) {\r\n        this.socketEmit(\"party\", {\r\n            event: \"join\",\r\n            partyId: partyId,\r\n            playerName: nickName\r\n        });\r\n    }\r\n\r\n    kickPlayer(playerId) {\r\n        this.socketEmit(\"party\", {\r\n            event: \"kickPlayer\",\r\n            token: this.token,\r\n            partyId: this.party.partyId,\r\n            playerId: playerId\r\n        });\r\n    }\r\n\r\n    gameInitReady() {\r\n        this.socketEmit(\"party\", {\r\n            event: \"gameInitReady\",\r\n            token: this.token,\r\n            partyId: this.party.partyId,\r\n            playerId: this.player.id\r\n        })\r\n    }\r\n\r\n    playerReady() {\r\n        this.socketEmit(\"party\", {\r\n            event: \"playerReady\",\r\n            token: this.token,\r\n            partyId: this.party.partyId,\r\n            playerId: this.player.id\r\n        })\r\n    }\r\n\r\n    playerUnready() {\r\n        this.socketEmit(\"party\", {\r\n            event: \"playerUnready\",\r\n            token: this.token,\r\n            partyId: this.party.partyId,\r\n            playerId: this.player.id\r\n        })\r\n    }\r\n\r\n    startGame() {\r\n        this.socketEmit(\"party\", {\r\n            event: \"startGame\",\r\n            token: this.token,\r\n            partyId: this.party.partyId,\r\n            playerId: this.player.id\r\n        })\r\n    }\r\n\r\n}","// JavaScript source code\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport io from 'socket.io-client';\r\nimport GameModal from './components/GameModal';\r\nimport PartyModal from './components/PartyModal'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/js/fontawesome';\r\nimport '@fortawesome/fontawesome-free/js/solid';\r\nimport '@fortawesome/fontawesome-free/js/regular';\r\nimport '@fortawesome/fontawesome-free/js/brands';\r\nimport '../css/style.css';\r\nimport * as Games from './components/Games';\r\nimport Client from './lib/client';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        var endPoint = \"https://0.playplayplay.ml\";\r\n\r\n        var savedEndPoint = localStorage.getItem(\"endpoint\");\r\n        if (localStorage && savedEndPoint) {\r\n            endPoint = savedEndPoint;\r\n            /*\r\n            if (confirm(\"Warning: Your game API endpoint will be pointed to \\\"\" + savedEndPoint + \"\\\". Modify your LocalStorage or clear browser history to point back to default server. Are you sure to continue with this API endpoint?\")) {\r\n\r\n            };\r\n            */\r\n        }\r\n\r\n        this.client = new Client(endPoint);\r\n        this.state = {\r\n            gameModalShow: true,\r\n            partyModalShow: false,\r\n            playground: false,\r\n            gameInitReadyList: false,\r\n            playerReadyList: false\r\n        };\r\n        this.startGame = this.startGame.bind(this);\r\n        this.joinGame = this.joinGame.bind(this);\r\n        this.listen();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window.location.search && window.location.search.length === 7) {\r\n            var name = prompt(\"Enter your nickname:\");\r\n\r\n            this.client.joinParty(name, window.location.search.substring(1, 7));\r\n\r\n            this.setState({\r\n                gameModalShow: false\r\n            });\r\n        }\r\n    }\r\n\r\n    listen() {\r\n        this.client.on(\"party\", (data) => {\r\n            this.setState({\r\n                party: this.client.party\r\n            });\r\n\r\n            if (data.event === \"gameInitReady\") {\r\n                this.setState({\r\n                    gameInitReadyList: this.client.gameInitReadyList\r\n                });\r\n            } else if (data.event === \"playerReady\") {\r\n                this.setState({\r\n                    playerReadyList: this.client.playerReadyList\r\n                });\r\n            } else if (data.event === \"startGame\") {\r\n                this.setState({\r\n                    gameModalShow: false,\r\n                    partyModalShow: false\r\n                });\r\n            } else if (this.client.party && this.client.party.gameId && (data.event === \"partyJoined\" || data.event === \"gameChanged\")) {\r\n                if (this.state.playground) {\r\n                    this.setState({\r\n                        awaitChangeGame: true\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        gameModalShow: false,\r\n                        partyModalShow: true\r\n                    });\r\n                    this.updatePlayground();\r\n                }\r\n            } else if (data.event && data.event.endsWith(\"Failed\")) {\r\n                console.error(data);\r\n                if (data.code === -4) {\r\n                    return;\r\n                }\r\n                alert(\"Code: \" + data.code + \"\\nError: \" + data.msg);\r\n            }\r\n        });\r\n    }\r\n\r\n    updatePlayground() {\r\n        this.setState({\r\n            playgroundBootDone: false,\r\n            playground: React.createElement(Games.getInstance(this.client.party.gameId), {\r\n                party: this.state.party,\r\n                client: this.client,\r\n                onBootDone: () => {\r\n                    console.log(\"Bootdone\");\r\n                    this.setState({\r\n                        playgroundBootDone: true\r\n                    });\r\n                    this.client.gameInitReady();\r\n                },\r\n                onDisable: () => {\r\n                    this.setState({\r\n                        gameModalShow: false,\r\n                        partyModalShow: true,\r\n                        playground: false,\r\n                        playgroundBootDone: false\r\n                    });\r\n\r\n                    if (this.state.awaitChangeGame) {\r\n                        this.setState({\r\n                            awaitChangeGame: false\r\n                        });\r\n                        this.updatePlayground();\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    joinGame() {\r\n        var nickName = document.getElementById(\"nickname-field\").value;\r\n        var partyId = document.getElementById(\"party-code-field\").value;\r\n\r\n        if (!nickName || nickName === \"\") {\r\n            alert(\"Please fill in your nickname.\");\r\n            return;\r\n        }\r\n\r\n        if (!partyId || partyId === \"\" || partyId.length !== 6) {\r\n            alert(\"Party Code Invalid.\");\r\n            return;\r\n        }\r\n\r\n        this.client.joinParty(nickName, partyId);\r\n\r\n        this.setState({\r\n            gameModalShow: false\r\n        });\r\n    }\r\n\r\n    startGame(gameId) {\r\n        if (!Games.isGameExist(gameId)) {\r\n            alert(\"The selected game is currently unavailable.\");\r\n            return;\r\n        }\r\n        var localMode = document.getElementById(\"local-mode-switch\").checked;\r\n        var nickName = document.getElementById(\"nickname-field\").value;\r\n\r\n        if (!nickName || nickName === \"\") {\r\n            alert(\"Please fill in your nickname.\");\r\n            return;\r\n        }\r\n\r\n        this.client.createParty(nickName, gameId);\r\n\r\n        this.setState({\r\n            gameModalShow: false\r\n        });\r\n        /*\r\n        this.setState({\r\n            gameModalShow: false,\r\n            playground: React.createElement(Games[gameName], {\r\n                localMode: localMode,\r\n                playerName: nickName,\r\n                onDisable: () => {\r\n                    this.setState({\r\n                        gameModalShow: true,\r\n                        partyModalShow: false,\r\n                        playground: false\r\n                    });\r\n                }\r\n            })\r\n        });\r\n        */\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.playground}\r\n                <GameModal show={this.state.gameModalShow} onHide={() => this.setState({ gameModalShow: false })} startGame={this.startGame} joinGame={this.joinGame} />\r\n                {\r\n                    this.state.partyModalShow &&\r\n                    <PartyModal show={this.state.partyModalShow} onHide={() => this.setState({ partyModalShow: false })} client={this.client} playerReadyList={this.state.playerReadyList} gameInitReadyList={this.state.gameInitReadyList} party={this.state.party} player={this.client.player} playgroundBootDone={this.state.playgroundBootDone} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));","module.exports = {\r\n    SUIT: [\"diamonds\", \"clubs\", \"hearts\", \"spades\"],\r\n    RANK: [\"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"jack\", \"queen\", \"king\", \"ace\", \"2\"],\r\n    COMBINATIONS: [\"pair\", \"threeOfAKind\", \"fiveCardHands\"],\r\n    FIVE_CARD_HANDS: [\"straight\", \"flush\", \"fullHouse\", \"fourOfAKind\", \"straightFlush\"]\r\n};","var Card = require(\"./card\");\r\n\r\nclass FindCombinations {\r\n\r\n    findAll(deck) {\r\n        var out = {\r\n            pair: [],\r\n            threeOfAKind: [],\r\n            straight: [],\r\n            flush: [],\r\n            fullHouse: [],\r\n            fourOfAKind: [],\r\n            straightFlush: []\r\n        };\r\n\r\n        if (deck.length < 2) {\r\n            return out;\r\n        }\r\n\r\n        var cards = this.deckToCards(deck);\r\n\r\n        out.pair = this.findPair(cards);\r\n        out.threeOfAKind = this.findThreeOfAKind(cards);\r\n        out.straight = this.findStraight(cards);\r\n        out.flush = this.findFlush(cards);\r\n        out.fullHouse = this.findFullHouse(cards);\r\n        out.fourOfAKind = this.findFourOfAKind(cards);\r\n        out.straightFlush = this.findStraightFlush(cards);\r\n\r\n        return out;\r\n    }\r\n\r\n    findPair(cards) {\r\n        return this.byRankSame(cards, 2);\r\n    }\r\n\r\n    findThreeOfAKind(cards) {\r\n        return this.byRankSame(cards, 3);\r\n    }\r\n\r\n    findStraight(cards) {\r\n        return this.byRankConsecutive(cards, 5);\r\n    }\r\n\r\n    findFlush(cards) {\r\n        return this.bySuitSame(cards, 5);\r\n    }\r\n\r\n    findFullHouse(cards) {\r\n        return this.byRankSameWithExternal(cards, 3, (out, array, consec) => {\r\n            var pairs = this.findPair(array);\r\n\r\n            var comb;\r\n            var x;\r\n            for (x = 0; x < pairs.length; x++) {\r\n                comb = consec.slice();\r\n                comb = comb.concat(pairs[x]);\r\n                out.push(comb);\r\n            }\r\n        });\r\n    }\r\n\r\n    findFourOfAKind(cards) {\r\n        return this.byRankSameWithExternal(cards, 4, (out, array, consec) => {\r\n            var comb;\r\n            var x;\r\n            for (x = 0; x < array.length; x++) {\r\n                comb = consec.slice();\r\n                comb.push(array[x]);\r\n                out.push(comb);\r\n            }\r\n        });\r\n    }\r\n\r\n    byRankSameWithExternal(cards, len, externalFunc) {\r\n        var out = [];\r\n\r\n        var consec = this.byRankSame(cards, len);\r\n        var array;\r\n        var i;\r\n        var x;\r\n        var y;\r\n        for (i = 0; i < consec.length; i++) {\r\n            array = cards.slice();\r\n            for (x = 0; x < consec[i].length; x++) {\r\n                for (y = 0; y < array.length; y++) {\r\n                    if (array[y].card.equals(consec[i][x].card)) {\r\n                        array.splice(y, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            externalFunc(out, array, consec[i]);\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    findStraightFlush(cards) {\r\n        var straights = this.findStraight(cards);\r\n\r\n        var out = [];\r\n        var i;\r\n        var x;\r\n        var count;\r\n        for (i = 0; i < straights.length; i++) {\r\n            count = 0;\r\n            for (x = 1; x < straights[i].length; x++) {\r\n                if (straights[i][x].card.suit === straights[i][x - 1].card.suit) {\r\n                    count++;\r\n                } else {\r\n                    break;\r\n                }\r\n\r\n                if (count === 4) {\r\n                    out.push(straights[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    byRankSame(cards, len) {\r\n        return this.sameCombinations(cards, len, \"getRankSize\");\r\n    }\r\n\r\n    bySuitSame(cards, len) {\r\n        return this.sameCombinations(cards, len, \"getSuitSize\");\r\n    }\r\n\r\n    sameCombinations(cards, len, sizeFuncName) {\r\n        var out = [];\r\n\r\n        cards.sort((a, b) => {\r\n            var aSize = a.card[sizeFuncName]();\r\n            var bSize = b.card[sizeFuncName]();\r\n            if (aSize < bSize) {\r\n                return -1;\r\n            } else if (aSize > bSize) {\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n\r\n        var startPos;\r\n        var i;\r\n        var x;\r\n        var count;\r\n        var comb;\r\n        for (startPos = 0; startPos < cards.length - (len - 1); startPos++) {\r\n            count = 0;\r\n            for (i = startPos + 1; i < cards.length; i++) {\r\n                if (cards[i - 1].card[sizeFuncName]() === cards[i].card[sizeFuncName]()) {\r\n                    count++;\r\n                } else {\r\n                    break;\r\n                }\r\n\r\n                if (count === len - 1) {\r\n                    comb = [];\r\n                    for (x = startPos; x < startPos + len; x++) {\r\n                        comb.push(cards[x]);\r\n                    }\r\n                    out.push(comb);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    byRankConsecutive(cards, len) {\r\n        var out = [];\r\n\r\n        cards.sort((a, b) => {\r\n            var aSize = a.card.getRankSize();\r\n            var bSize = b.card.getRankSize();\r\n            if (aSize < bSize) {\r\n                return -1;\r\n            } else if (aSize > bSize) {\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n\r\n        var startPos;\r\n        var i;\r\n        var x;\r\n        var count;\r\n        var comb;\r\n        for (startPos = 0; startPos < cards.length - (len - 1); startPos++) {\r\n            count = 0;\r\n            for (i = startPos + 1; i < cards.length; i++) {\r\n                if (cards[i - 1].card.getRankSize() === cards[i].card.getRankSize() - 1) {\r\n                    count++;\r\n                } else {\r\n                    break;\r\n                }\r\n\r\n                if (count === len - 1) {\r\n                    comb = [];\r\n                    for (x = startPos; x < startPos + len; x++) {\r\n                        comb.push(cards[x]);\r\n                    }\r\n                    out.push(comb);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    sortByRank(deck) {\r\n        this.sortDeckSuits(deck);\r\n        this.sortDeckRanks(deck);\r\n    }\r\n\r\n    sortBySuit(deck) {\r\n        this.sortDeckRanks(deck);\r\n        this.sortDeckSuits(deck);\r\n    }\r\n\r\n    sortDeckRanks(deck) {\r\n        deck.sort((a, b) => {\r\n            var aSize = a.getRankSize();\r\n            var bSize = b.getRankSize();\r\n            if (aSize < bSize) {\r\n                return -1;\r\n            } else if (aSize > bSize) {\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    sortDeckSuits(deck) {\r\n        deck.sort((a, b) => {\r\n            var aSize = a.getSuitSize();\r\n            var bSize = b.getSuitSize();\r\n            if (aSize < bSize) {\r\n                return -1;\r\n            } else if (aSize > bSize) {\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    deckToCards(deck) {\r\n        var cards = [];\r\n        var i;\r\n        for (i = 0; i < deck.length; i++) {\r\n            cards.push({\r\n                index: i,\r\n                card: deck[i]\r\n            });\r\n        }\r\n        return cards;\r\n    }\r\n\r\n    cardsToDeck(cards) {\r\n        var deck = [];\r\n        var i;\r\n        for (i = 0; i < cards.length; i++) {\r\n            deck.push(cards[i].card);\r\n        }\r\n        return deck;\r\n    }\r\n    \r\n    jsonToCards(deck) {\r\n        var out = [];\r\n        var i;\r\n        for (i = 0; i < deck.length; i++) {\r\n            out.push(new Card(deck[i].suit, deck[i].rank))\r\n        }\r\n        return out;\r\n    }\r\n}\r\n\r\nmodule.exports = FindCombinations;","var FindCombinations = require(\"./findCombinations\");\r\nvar Sizes = require(\"./sizes\");\r\nvar Combination = require(\"./combination\");\r\n\r\nmodule.exports = function (cards) {\r\n    var fc = new FindCombinations();\r\n\r\n    var combinationName;\r\n    var fiveCardName = false;\r\n    if(cards.length === 1) {\r\n        combinationName = \"single\";\r\n    } else {\r\n        var result = fc.findAll(cards);\r\n\r\n        console.log(result);\r\n\r\n        var i;\r\n        var key;\r\n        combinationName = false;\r\n\r\n        if (cards.length === 5) {\r\n            var found = false;\r\n            for (i = Sizes.FIVE_CARD_HANDS.length - 1; i >= 0; i--) {\r\n                key = Sizes.FIVE_CARD_HANDS[i];\r\n                if (result[key].length > 0) {\r\n                    fiveCardName = key;\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (found) {\r\n                combinationName = \"fiveCardHands\";\r\n            }\r\n        } else if(cards.length === 3) {\r\n            if (result[\"threeOfAKind\"].length > 0) {\r\n                combinationName = \"threeOfAKind\";\r\n            }\r\n        } else if(cards.length === 2) {\r\n            if (result[\"pair\"].length > 0) {\r\n                combinationName = \"pair\";\r\n            }\r\n        }\r\n\r\n        if (!combinationName) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return new Combination(combinationName, cards, fiveCardName);\r\n};","var Sizes = require(\"./sizes\");\r\n\r\nclass Card {\r\n\r\n    constructor(suit, rank) {\r\n        this.suit = suit;\r\n        this.rank = rank;\r\n    }\r\n\r\n    getSuitSize() {\r\n        return Sizes.SUIT.indexOf(this.suit);\r\n    }\r\n\r\n    getRankSize() {\r\n        return Sizes.RANK.indexOf(this.rank);\r\n    }\r\n\r\n    /*\r\n    getSize() {\r\n        var suitSize = this.getSuitSize();\r\n        var rankSize = this.getRankSize();\r\n        return (suitSize + 1) * (rankSize + 1);\r\n    }\r\n    */\r\n\r\n    compare(card) {\r\n        var myRankIndex = Sizes.RANK.indexOf(this.rank);\r\n        var cardRankIndex = Sizes.RANK.indexOf(card.rank);\r\n\r\n        if (myRankIndex < cardRankIndex) {\r\n            return -1;\r\n        } else if (myRankIndex > cardRankIndex) {\r\n            return 1;\r\n        }\r\n\r\n        var mySuitIndex = Sizes.SUIT.indexOf(this.suit);\r\n        var cardSuitIndex = Sizes.SUIT.indexOf(card.suit);\r\n\r\n        if (mySuitIndex < cardSuitIndex) {\r\n            return -1;\r\n        } else if (mySuitIndex > cardSuitIndex) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    equals(card) {\r\n        return this.suit === card.suit && this.rank === card.rank;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Card;","var Sizes = require(\"./sizes\");\r\nvar FindCombinations = require(\"./findCombinations\");\r\n\r\nclass Combination {\r\n\r\n    constructor(combinationName, cards, fiveCardName) {\r\n        this.cards = cards;\r\n        this.combinationName = combinationName;\r\n        this.fiveCardName = fiveCardName;\r\n    }\r\n\r\n    getRankSize() {\r\n        var size = 0;\r\n        var i;\r\n        for (i = 0; i < this.cards.length; i++) {\r\n            size += this.cards[i].getRankSize();\r\n        }\r\n        return size;\r\n    }\r\n\r\n    getSuitSize() {\r\n        var size = 0;\r\n        var i;\r\n        for (i = 0; i < this.cards.length; i++) {\r\n            size += this.cards[i].getSuitSize();\r\n        }\r\n        return size;\r\n    }\r\n\r\n    compare(combination) {\r\n        //Cannot compare combinations that are not the same length\r\n        if (this.cards.length !== combination.cards.length || this.combinationName !== combination.combinationName) {\r\n            throw new Error(\"The two combinations' length/types are not the same. They cannot be compared.\");\r\n            //return false;\r\n        }\r\n\r\n        if (this.cards.length === 5 && combination.cards.length === 5) {\r\n            var thisIndex = Sizes.FIVE_CARD_HANDS.indexOf(this.combinationName);\r\n            var combinationIndex = Sizes.FIVE_CARD_HANDS.indexOf(this.combinationName);\r\n\r\n            if (thisIndex < combinationIndex) {\r\n                return -1;\r\n            } else if (thisIndex > combinationIndex) {\r\n                return 1;\r\n            }\r\n\r\n            //Compare size if the same combination type\r\n        }\r\n\r\n        var thisRankSize = this.getRankSize();\r\n        var combinationRankSize = combination.getRankSize();\r\n\r\n        if (thisRankSize < combinationRankSize) {\r\n            return -1;\r\n        } else if (thisRankSize > combinationRankSize) {\r\n            return 1;\r\n        }\r\n\r\n        var thisSuitSize = this.getSuitSize();\r\n        var combinationSuitSize = combination.getSuitSize();\r\n\r\n        if (thisSuitSize < combinationSuitSize) {\r\n            return -1;\r\n        } else if (thisSuitSize > combinationSuitSize) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Combination;","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./bigtwo.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_GET_URL_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/getUrl.js\");\nvar ___CSS_LOADER_URL_IMPORT_0___ = require(\"../img/playingcards/back.svg\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\nexports.push([module.id, \".board {\\r\\n    position: fixed;\\r\\n    left: calc(50% - 50em);\\r\\n    top: calc(50% - 28.125em);\\r\\n    width: 100em;\\r\\n    height: 56.25em;\\r\\n}\\r\\n\\r\\n.board .playingcards {\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n}\\r\\n\\r\\n.board .playingcards .playingcard {\\r\\n    position: absolute;\\r\\n    width: 6.25em;\\r\\n    height: 9.08em;\\r\\n    top: -4.54em;\\r\\n    left: -3.125em;\\r\\n    background-size: cover;\\r\\n    background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\r\\n    transition: all 0.5s ease-in-out;\\r\\n    -webkit-transform-origin: 50% 50%;\\r\\n    -moz-transform-origin: 50% 50%;\\r\\n    -o-transform-origin: 50% 50%;\\r\\n    -ms-transform-origin: 50% 50%;\\r\\n\\ttransform-origin: 50% 50%;\\r\\n}\\r\\n\\r\\n.combination-buttons {\\r\\n    position: absolute;\\r\\n    left: -24em;\\r\\n    top: 6em;\\r\\n    z-index: 53;\\r\\n}\\r\\n\\r\\n.combination-buttons button {\\r\\n    padding: .75rem 1.5rem;\\r\\n    font-size: 1.5rem;\\r\\n    line-height: 1;\\r\\n    border-radius: .45rem;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.turn-buttons {\\r\\n    position: absolute;\\r\\n    left: -12em;\\r\\n    top: 2em;\\r\\n    z-index: 53;\\r\\n}\\r\\n\\r\\n.turn-buttons button {\\r\\n    padding: .75rem 1.5rem;\\r\\n    font-size: 1.5rem;\\r\\n    line-height: 1;\\r\\n    border-radius: .45rem;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.player1 {\\r\\n    position: absolute;\\r\\n    left: -31em;\\r\\n    top: -5.5em;\\r\\n    font-size: 1.5rem;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.player2 {\\r\\n    position: absolute;\\r\\n    left: 3em;\\r\\n    top: -13em;\\r\\n    font-size: 1.5rem;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.player3 {\\r\\n    position: absolute;\\r\\n    left: 27em;\\r\\n    top: -5.5em;\\r\\n    font-size: 1.5rem;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.waiting-players {\\r\\n    position: absolute;\\r\\n    left: -4.5em;\\r\\n    top: -1em;\\r\\n    font-size: 2.5rem;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.left-player-passed {\\r\\n    position: absolute;\\r\\n    left: -12em;\\r\\n    top: -1em;\\r\\n    font-size: 3rem;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.right-player-passed {\\r\\n    position: absolute;\\r\\n    left: 9em;\\r\\n    top: -1em;\\r\\n    font-size: 3rem;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.top-player-passed {\\r\\n    position: absolute;\\r\\n    left: -1.5em;\\r\\n    top: -3em;\\r\\n    font-size: 3rem;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.bottom-player-passed {\\r\\n    position: absolute;\\r\\n    left: -1.5em;\\r\\n    top: 0.5em;\\r\\n    font-size: 3rem;\\r\\n    white-space: nowrap;\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export default __webpack_public_path__ + \"f956b6d85f78462ab4adc75933f408cb.svg\";","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./guessnum.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".guessnum-home-screen {\\r\\n    height: 90vh;\\r\\n}\\r\\n\\r\\nbody.guessnum-correct {\\r\\n    background-color: rgb(166, 255, 168)\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}