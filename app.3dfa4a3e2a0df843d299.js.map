{"version":3,"sources":["webpack:///./src/css/style.css?9fcd","webpack:///./src/css/style.css","webpack:///./src/css/guessnum.css?78dc","webpack:///./src/css/guessnum.css","webpack:///./src/js/components/GameModal.js","webpack:///./src/js/components/SetupLocalPlayersModal.js","webpack:///./src/js/components/PassToPlayerModal.js","webpack:///./src/js/components/SelectKeypadKeyboardModal.js","webpack:///./src/js/components/Playground.js","webpack:///./src/js/components/NumericKeypad.js","webpack:///./src/js/App.js","webpack:///./src/js/playgrounds/GuessNumberPlayground.js"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","props","Modal","show","animation","backdrop","Header","Title","Body","InputGroup","className","FormControl","placeholder","aria-label","aria-describedby","Append","Button","variant","onClick","startGame","Form","Check","type","id","label","checked","disabled","Footer","React","useState","players","setPlayers","items","min","max","key","nameFields","Prepend","Text","Group","Label","Control","as","onChange","p","document","getElementById","value","block","val","map","onComplete","playerName","onContinue","Playground","turns","state","loading","loadingMsg","keypad","this","localMode","setupLocalPlayers","getMinimumPlayers","getMaximumPlayers","enable","disable","setState","minPlayers","maxPlayers","length","player","waitPlayer","nextTurn","onDisable","playersList","Spinner","isSetupComplete","renderPlayground","selectKeypadKeyboard","SelectKeypadKeyboardModal","SetupLocalPlayersModal","console","log","PassToPlayerModal","bind","Component","hori","j","enabled","verti","numbers","includes","onNumberClick","ButtonGroup","Container","fluid","style","display","vertical","doneEnabled","onDoneClick","backspaceEnabled","onBackspaceClick","Games","maximum","randCount","guess","homeScreen","gameScreen","text","number","numberMin","numberMax","enabledKeys","random","clearInterval","interval","getElementsByTagName","classList","remove","clearTimeout","timeout","rand","Math","floor","setTimeout","readyNextTurn","focus","updateKeypad","len","minLog","log10","maxLog","pow","isKeyAvailable","resetTurns","to","from","countUpDownTo","resultScreen","setInterval","cl","contains","add","guessStr","error","parseInt","isNaN","ready","leave","onKeyPress","evt","NumericKeypad","preventDefault","target","innerHTML","slice","App","modalShow","playground","gameName","createElement","alert","GameModal","onHide","ReactDOM","render"],"mappings":"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","file":"app.3dfa4a3e2a0df843d299.js","sourcesContent":["var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./style.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body {\\r\\n    width: 100%;\\r\\n    height: 100vh;\\r\\n    position: absolute;\\r\\n    background-color: rgb(229, 229, 229)\\r\\n}\\r\\n\\r\\n.party-list {\\r\\n    margin: 4px;\\r\\n    position: absolute;\\r\\n    top: 4px;\\r\\n    right: 4px;\\r\\n}\\r\\n\\r\\n.hori-scroll {\\r\\n    margin: 4px;\\r\\n    overflow: auto;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.hori-scroll button {\\r\\n    margin: 4px;\\r\\n}\\r\\n\\r\\n.playground {\\r\\n    padding: 8px;\\r\\n}\\r\\n\\r\\n.loading {\\r\\n    margin-top: 1rem;\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 768px) {\\r\\n    nav {\\r\\n        margin-top: env(safe-area-inset-top);\\r\\n    }\\r\\n\\r\\n    .modal {\\r\\n        padding-top: env(safe-area-inset-top);\\r\\n        padding-bottom: env(safe-area-inset-bottom);\\r\\n    }\\r\\n\\r\\n    .playground {\\r\\n        padding-top: env(safe-area-inset-top);\\r\\n        padding-bottom: env(safe-area-inset-bottom);\\r\\n    }\\r\\n}\\r\\n\\r\\n/* Touch Keypad */\\r\\n\\r\\n.touch-keypad {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    margin: 0px;\\r\\n    padding: 0px;\\r\\n    z-index: 2;\\r\\n    background: rgba(255, 255, 255, 0.4);\\r\\n    padding-bottom: env(safe-area-inset-bottom);\\r\\n}\\r\\n\\r\\n.touch-keypad .btn-group-vertical {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.touch-keypad .numeric-keypad {\\r\\n    width: 75%;\\r\\n}\\r\\n\\r\\n.touch-keypad-key {\\r\\n    min-height: 58px;\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./guessnum.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".guessnum-home-screen {\\r\\n    height: 90vh;\\r\\n}\\r\\n\\r\\nbody.guessnum-correct {\\r\\n    background-color: rgb(166, 255, 168)\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react';\r\nimport { Modal, Button, ButtonGroup, InputGroup, FormControl, Form } from 'react-bootstrap';\r\n\r\nexport default function(props) {\r\n    return (\r\n        <Modal show={props.show} animation={false} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Play³</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <label>Join a party:</label>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        placeholder=\"Party Code\"\r\n                        aria-label=\"Party Code\"\r\n                        aria-describedby=\"party-code-field-addon\"\r\n                    />\r\n                    <InputGroup.Append>\r\n                        <Button variant=\"success\">Join</Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n                <div className=\"d-flex\">\r\n                    <Button variant=\"success\" className=\"btn-block\">Quick join</Button>\r\n                    <Button variant=\"secondary\" className=\"ml-2\"><i className=\"fas fa-cog\"></i></Button>\r\n                </div>\r\n                <hr />\r\n                <p>Start a new game:</p>\r\n                <div className=\"hori-scroll\">\r\n                    <Button variant=\"secondary\" onClick={() => { props.startGame(\"classic\") }}><i className=\"fas fa-heart fa-2x\"></i><br />Classic</Button>\r\n                    <Button variant=\"secondary\" onClick={() => { props.startGame(\"royal\") }}><i className=\"fas fa-grin-stars fa-2x\"></i><br />Royal</Button>\r\n                    <Button variant=\"secondary\" onClick={() => { props.startGame(\"twentyone\") }}><i className=\"fas fa-sort-numeric-down fa-2x\"></i><br />Twenty-one</Button>\r\n                    <Button variant=\"secondary\" onClick={() => { props.startGame(\"guessnum\") }}><i className=\"fas fa-list-ol fa-2x\"></i><br />Guess Number</Button>\r\n                    <Button variant=\"secondary\" onClick={() => { props.startGame(\"guessbig\") }}><i className=\"fas fa-dice fa-2x\"></i><br />Guess Big</Button>\r\n                </div>\r\n                <Form.Check\r\n                    type=\"switch\"\r\n                    id=\"local-mode-switch\"\r\n                    label=\"Start game locally\"\r\n                    checked={true}\r\n                    disabled\r\n                />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import React from 'react';\r\nimport { Modal, Button, ButtonGroup, InputGroup, FormControl, Form } from 'react-bootstrap';\r\n\r\nexport default function (props) {\r\n    var [players, setPlayers] = React.useState(false);\r\n\r\n    var items = [];\r\n    var i;\r\n    for (i = props.min; i <= props.max; i++) {\r\n        items.push(<option key={i}>{i}</option>);\r\n    }\r\n\r\n    if (!players) {\r\n        players = props.min;\r\n    }\r\n\r\n    var nameFields = [];\r\n    for (i = 1; i <= players; i++) {\r\n        nameFields.push(\r\n            <InputGroup className=\"mb-3\" key={i}>\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text id={\"player-number-\" + i}>Player {i}</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                    placeholder={\"Player \" + i}\r\n                    aria-label=\"Nickname\"\r\n                    aria-describedby={\"player-number-\" + i}\r\n                    id={\"player-nick-\" + i}\r\n                />\r\n            </InputGroup>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <Modal show={props.show} animation={false} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Setup Players</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>This game requires at least {props.min} player(s) and at maximum {props.max} player(s). Please enter the names for the players below:</p>\r\n                <Form.Group>\r\n                    <Form.Label>Players:</Form.Label>\r\n                    <Form.Control as=\"select\" id=\"localPlayersSelect\" onChange={() => {\r\n                        var p = document.getElementById(\"localPlayersSelect\").value;\r\n                        setPlayers(p);\r\n                    }}>\r\n                        {items}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                {nameFields}\r\n                <Button variant=\"success\" block onClick={() => {\r\n                    var map = [];\r\n                    var i;\r\n                    var val;\r\n                    for (i = 1; i <= players; i++) {\r\n                        val = document.getElementById(\"player-nick-\" + i).value;\r\n                        if (val === \"\") {\r\n                            val = \"Player \" + i;\r\n                        }\r\n                        map.push(val);\r\n                    }\r\n                    props.onComplete(map);\r\n                }}>Continue</Button>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import React from 'react';\r\nimport { Modal, Button, ButtonGroup, InputGroup, FormControl, Form } from 'react-bootstrap';\r\n\r\nexport default function (props) {\r\n    return (\r\n        <Modal show={props.show} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Pass to {props.playerName}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>It is <b>{props.playerName}</b>'s turn! Pass the device and let {props.playerName} to press the \"Continue\" button.</p>\r\n                <Button variant=\"success\" block onClick={props.onContinue}>Continue</Button>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nexport default function (props) {\r\n    return (\r\n        <Modal show={props.show} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Keypad or keyboard?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>Please select either to use keypad or keyboard for input:</p>\r\n                <div className=\"d-flex\">\r\n                    <Button block><i className=\"fas fa-keyboard\"></i><br />Keyboard</Button>\r\n                    <Button block><i className=\"fas fa-gamepad\"></i><br />Keypad</Button>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import React from 'react';\r\nimport SetupLocalPlayersModal from './SetupLocalPlayersModal';\r\nimport PassToPlayerModal from './PassToPlayerModal';\r\nimport SelectKeypadKeyboardModal from './SelectKeypadKeyboardModal';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport default class Playground extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.players = false;\r\n        this.turns = 0;\r\n        this.state = { loading: true, loadingMsg: \"Loading playground\", keypad: true };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.setState({ selectKeypadKeyboard: true });\r\n        if (this.props.localMode) {\r\n            this.setupLocalPlayers(this.getMinimumPlayers(), this.getMaximumPlayers());\r\n        } else {\r\n            this.enable();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.disable();\r\n    }\r\n\r\n    isSetupComplete() {\r\n        return this.props.localMode && this.players;\r\n    }\r\n\r\n    setupLocalPlayers(min, max) {\r\n        this.setState({\r\n            loadingMsg: \"Setting up local players\",\r\n            minPlayers: min,\r\n            maxPlayers: max,\r\n            setupLocalPlayers: true\r\n        });\r\n    }\r\n\r\n    startGame() {\r\n\r\n    }\r\n\r\n    resetTurns() {\r\n        this.turns = 0;\r\n    }\r\n\r\n    ready() {\r\n        if (this.props.localMode) {\r\n            this.startGame();\r\n        }\r\n        //TODO Submit ready status\r\n    }\r\n\r\n    readyNextTurn() {\r\n        if (this.props.localMode) {\r\n            if (this.players.length > 1) {\r\n                var player = this.players[this.turns++ % this.players.length];\r\n                this.setState({ waitPlayer: true, playerName: player });\r\n            } else {\r\n                this.nextTurn();\r\n            }\r\n        } else {\r\n            //TODO online mode check\r\n        }\r\n    }\r\n\r\n    leave() {\r\n        this.disable();\r\n        this.props.onDisable();\r\n        //TODO Submit leave status\r\n    }\r\n\r\n    getMinimumPlayers() {\r\n        return 1;\r\n    }\r\n\r\n    getMaximumPlayers() {\r\n        return 1;\r\n    }\r\n\r\n    nextTurn() {\r\n\r\n    }\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n\r\n    renderPlayground() {\r\n\r\n    }\r\n\r\n    render() {\r\n        var playersList = false;\r\n        if (this.players) {\r\n            playersList = [];\r\n            var i;\r\n            for (i = 0; i < this.players.length; i++) {\r\n                playersList.push(<div key={this.players[i]}><span className={this.state.playerName === this.players[i] ? \"font-weight-bold\" : \"\"}>{this.players[i]}</span><br /></div>);\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"container-fluid playground\">\r\n                {this.state.loading &&\r\n                    <div className=\"loading d-flex align-items-center justify-content-center\">\r\n                    <center><Spinner animation=\"border\" /><br /><span>{this.state.loadingMsg}</span></center>\r\n                    </div>\r\n                }\r\n                {this.isSetupComplete() && this.renderPlayground()}\r\n                {this.state.selectKeypadKeyboard &&\r\n                    <SelectKeypadKeyboardModal show={true} />\r\n                }\r\n                {this.state.setupLocalPlayers &&\r\n                    <SetupLocalPlayersModal min={this.state.minPlayers} max={this.state.maxPlayers} show={this.state.setupLocalPlayers} onComplete={\r\n                    (map) => {\r\n                        console.log(map);\r\n                        this.players = map;\r\n                        this.setState({\r\n                            setupLocalPlayers: false,\r\n                            loadingMsg: \"Loading playground\"\r\n                        });\r\n                        this.enable();\r\n                    }} />\r\n                }\r\n                {this.state.waitPlayer &&\r\n                    <PassToPlayerModal show={this.state.waitPlayer} playerName={this.state.playerName} onContinue={(() => {\r\n                        this.setState({ waitPlayer: false });\r\n                        this.nextTurn();\r\n                    }).bind(this)} />\r\n                }\r\n                {playersList &&\r\n                    <div className=\"party-list\">\r\n                        <h4>Party</h4>\r\n                        {playersList}\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\r\nimport { Container, ButtonGroup, Button } from 'react-bootstrap';\r\n\r\nexport default function (props) {\r\n    var verti = [];\r\n    var hori;\r\n    var numbers = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\r\n    var i;\r\n    var j;\r\n    var enabled;\r\n    for (i = 0; i < numbers.length; i++) {\r\n        hori = [];\r\n        for (j = 0; j < numbers[i].length; j++) {\r\n            enabled = props.enabled.includes(numbers[i][j]);\r\n            hori.push(\r\n                <Button variant={enabled ? \"outline-secondary\" : \"secondary\"} className=\"py-3 touch-keypad-key touch-keypad-value\" key={i + \"-\" + j} onClick={props.onNumberClick} disabled={!enabled}>{numbers[i][j]}</Button>\r\n            );\r\n        }\r\n        verti.push(\r\n            <ButtonGroup key={i}>\r\n                {hori}\r\n            </ButtonGroup>\r\n        );\r\n    }\r\n    return (\r\n        <Container fluid={true} className=\"touch-keypad row\" style={{display: props.show ? \"\" : \"none\"}}>\r\n            <ButtonGroup vertical={true}>\r\n                {verti}\r\n                <ButtonGroup>\r\n                    <Button variant=\"primary\" className=\"py-3 touch-keypad-key touch-keypad-function touch-keypad-function-done\" disabled={!props.doneEnabled} onClick={props.onDoneClick}><i className=\"fas fa-check\"></i></Button>\r\n                    <Button variant={props.enabled.includes(0) ? \"outline-secondary\" : \"secondary\"} className=\"py-3 touch-keypad-key touch-keypad-value\" onClick={props.onNumberClick} disabled={!props.enabled.includes(0)}>0</Button>\r\n                    <Button variant=\"warning\" className=\"py-3 touch-keypad-key touch-keypad-function touch-keypad-function-backspace\" disabled={!props.backspaceEnabled} onClick={props.onBackspaceClick}><i className=\"fas fa-backspace\"></i></Button>\r\n                </ButtonGroup>\r\n            </ButtonGroup>\r\n        </Container>\r\n    );\r\n}","// JavaScript source code\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GameModal from './components/GameModal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/js/fontawesome';\r\nimport '@fortawesome/fontawesome-free/js/solid';\r\nimport '@fortawesome/fontawesome-free/js/regular';\r\nimport '@fortawesome/fontawesome-free/js/brands';\r\nimport '../css/style.css';\r\n\r\n/*\r\nimport ClassicPlayground from './playgrounds/ClassicPlayground'\r\nimport RoyalPlayground from './playgrounds/RoyalPlayground'\r\nimport TwentyOnePlayground from './playgrounds/TwentyOnePlayground'\r\n*/\r\nimport GuessNumberPlayground from './playgrounds/GuessNumberPlayground'\r\n/*\r\nimport GuessBigPlayground from './playgrounds/GuessBigPlayground'\r\n*/\r\n\r\nconst Games = {\r\n    /*\r\n    \"classic\": ClassicPlayground,\r\n    \"royal\": RoyalPlayground,\r\n    \"twentyone\": TwentyOnePlayground,\r\n    */\r\n    \"guessnum\": GuessNumberPlayground,\r\n    /*\r\n    \"guessbig\": GuessBigPlayground\r\n    */\r\n};\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { modalShow: true, playground: false };\r\n        this.startGame = this.startGame.bind(this);\r\n    }\r\n\r\n    startGame(gameName) {\r\n        if (!Games[gameName]) {\r\n            alert(\"The selected game is currently unavailable.\");\r\n            return;\r\n        }\r\n        var localMode = document.getElementById(\"local-mode-switch\").checked;\r\n        this.setState({\r\n            modalShow: false,\r\n            playground: React.createElement(Games[gameName], {\r\n                localMode: localMode,\r\n                onDisable: () => {\r\n                    this.setState({\r\n                        modalShow: true,\r\n                        playground: false\r\n                    });\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.playground}\r\n                <GameModal show={this.state.modalShow} onHide={() => this.setState({ modalShow: false })} startGame={this.startGame} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));","import React from 'react';\r\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport Playground from '../components/Playground.js';\r\nimport NumericKeypad from '../components/NumericKeypad';\r\nimport '../../css/guessnum.css';\r\n\r\nconst DEFAULT_MAXIMUM = 100;\r\n\r\nexport default class GuessNumberPlayground extends Playground {\r\n\r\n\tconstructor(props){\r\n        super(props);\r\n        this.maximum = DEFAULT_MAXIMUM;\r\n        this.randCount = 0;\r\n        this.guess = this.guess.bind(this);\r\n    }\r\n\r\n    getMinimumPlayers() {\r\n        return 1;\r\n    }\r\n\r\n    getMaximumPlayers() {\r\n        return 4;\r\n    }\r\n\r\n    enable() {\r\n        if (this.players.length > 2) {\r\n            this.maximum = DEFAULT_MAXIMUM * this.players.length;\r\n        }\r\n        this.setState({\r\n            loading: false,\r\n            homeScreen: true,\r\n            gameScreen: false,\r\n            text: 0,\r\n            number: 0,\r\n            numberMin: 1,\r\n            numberMax: this.maximum,\r\n            enabledKeys: []\r\n        });\r\n        this.random();\r\n    }\r\n\r\n    disable() {\r\n        clearInterval(this.interval);\r\n        document.getElementsByTagName(\"body\")[0].classList.remove(\"guessnum-correct\");\r\n        clearTimeout(this.timeout);\r\n    }\r\n\r\n    random() {\r\n        var rand = Math.floor(Math.random() * this.maximum);\r\n        this.setState({ text: rand });\r\n        this.randCount++;\r\n        if (this.randCount < 50) {\r\n            this.timeout = setTimeout(function () {\r\n                this.random();\r\n            }.bind(this), 25);\r\n        } else {\r\n            if (this.state.homeScreen) {\r\n                this.randCount = 0;\r\n                this.timeout = setTimeout(function () {\r\n                    this.random();\r\n                }.bind(this), Math.floor(Math.random() * 5000));\r\n            } else {\r\n                this.randCount = 0;\r\n                rand = Math.floor(Math.random() * this.maximum);\r\n                this.setState({ text: \"?\", number: rand });\r\n                this.readyNextTurn();\r\n            }\r\n        }\r\n    }\r\n\r\n    nextTurn() {\r\n        if (!this.state.keypad) {\r\n            document.getElementById(\"guess-number-field\").disabled = false;\r\n            document.getElementById(\"guess-number-field\").focus();\r\n        }\r\n        this.setState({ enabledKeys: [1, 2, 3, 4, 5, 6, 7, 8, 9, 0] });\r\n        this.updateKeypad();\r\n    }\r\n\r\n    updateKeypad() {\r\n        return;\r\n        /*\r\n        var val = document.getElementById(\"guess-number-field\").value;\r\n        var parsedVal = parseInt(val);\r\n        if (isNaN(parsedVal)) {\r\n            this.setState({ enabledKeys: [] });\r\n            return;\r\n        }\r\n\r\n        var keys = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\r\n        var out = [];\r\n        var num;\r\n        var i;\r\n        var j;\r\n        var minLog = Math.floor(Math.log10(this.state.numberMin));\r\n        var maxLog = Math.floor(Math.log10(this.state.numberMax));\r\n        for (i = 0; i < keys.length; i++) {\r\n            if (this.isKeyAvailable(parsedVal, keys[i], val.length)) {\r\n                out.push(keys[i]);\r\n            }\r\n        }\r\n        this.setState({ enabledKeys: out });\r\n        */\r\n    }\r\n\r\n    isKeyAvailable(val, key, len = 0) {\r\n        if (key === 0 && len === 0) {\r\n            return false;\r\n        }\r\n        var minLog = Math.floor(Math.log10(this.state.numberMin));\r\n        var maxLog = Math.floor(Math.log10(this.state.numberMax));\r\n        console.log(\"key: \" + key + \" len: \" + len);\r\n        console.log(\"minLog: \" + minLog + \" maxLog: \" + maxLog);\r\n        console.log(\"numMin/pow: \" + Math.floor(this.state.numberMin / Math.pow(10, len)));\r\n        console.log(\"powMinloglen: \" + Math.pow(key, minLog - len));\r\n        console.log(\"numMax/pow: \" + Math.floor(this.state.numberMax / Math.pow(10, len)));\r\n        console.log(\"powMaxloglen: \" + Math.pow(key, maxLog - len));\r\n        if (Math.floor(this.state.numberMin / Math.pow(10, len)) < Math.pow(key, minLog - len)) {\r\n            console.log(\"Minlog success\");\r\n            if (minLog - len > 0) {\r\n                console.log(\"Not len 0\")\r\n                return this.isKeyAvailable(key, len + 1);\r\n            } else {\r\n                console.log(\"Done true\")\r\n                return true;\r\n            }\r\n        } else if (Math.floor(this.state.numberMax / Math.pow(10, len)) > Math.pow(key, maxLog - len)) {\r\n            console.log(\"Maxlog success\");\r\n            if (maxLog - len > 0) {\r\n                console.log(\"Not len 0\")\r\n                return this.isKeyAvailable(key, len + 1);\r\n            } else {\r\n                console.log(\"Done true\")\r\n                return true;\r\n            }\r\n        } else {\r\n            console.log(\"Not correct\")\r\n            return false;\r\n        }\r\n    }\r\n\r\n    startGame() {\r\n        clearTimeout(this.timeout);\r\n        this.setState({\r\n            homeScreen: false,\r\n            gameScreen: true,\r\n            playerName: false,\r\n            numberMin: 1,\r\n            numberMax: this.maximum\r\n        });\r\n        this.resetTurns();\r\n        this.random();\r\n    };\r\n\r\n    countUpDownTo(to) {\r\n        var from = this.state.text;\r\n        var i;\r\n        if (to > from) {\r\n            this.setState({ text: from + 1 });\r\n            this.timeout = setTimeout(function () {\r\n                this.countUpDownTo(to);\r\n            }.bind(this), 750 / (to - from));\r\n        } else if (to < from) {\r\n            this.setState({ text: from - 1 });\r\n            this.timeout = setTimeout(function () {\r\n                this.countUpDownTo(to);\r\n            }.bind(this), 750 / (from - to));\r\n        } else if (to === this.state.number) {\r\n            this.setState({ gameScreen: false, resultScreen: true });\r\n            this.interval = setInterval(function () {\r\n                var cl = document.getElementsByTagName(\"body\")[0].classList;\r\n                if (cl.contains(\"guessnum-correct\")) {\r\n                    cl.remove(\"guessnum-correct\");\r\n                } else {\r\n                    cl.add(\"guessnum-correct\");\r\n                }\r\n            }, 1000);\r\n            return;\r\n        } else {\r\n            this.readyNextTurn();\r\n        }\r\n    }\r\n\r\n    guess() {\r\n        this.setState({ enabledKeys: [] });\r\n        var guessStr = document.getElementById(\"guess-number-field\").value;\r\n        if (guessStr === \"\") {\r\n            this.setState({ enabledKeys: [1, 2, 3, 4, 5, 6, 7, 8, 9, 0] });\r\n            this.setState({ error: \"It cannot be blank.\" })\r\n            return;\r\n        }\r\n        var guess = parseInt(guessStr);\r\n        if (isNaN(guess)) {\r\n            this.setState({ enabledKeys: [1, 2, 3, 4, 5, 6, 7, 8, 9, 0] });\r\n            this.setState({ error: \"It must be an integer.\" })\r\n            return;\r\n        }\r\n\r\n        if (guess >= this.state.numberMax) {\r\n            this.setState({ error: \"It cannot be larger than the maximum value.\" })\r\n            this.setState({ enabledKeys: [1, 2, 3, 4, 5, 6, 7, 8, 9, 0] });\r\n            return;\r\n        } else if (guess <= this.state.numberMin) {\r\n            this.setState({ error: \"It cannot be less than the minimum value.\" })\r\n            this.setState({ enabledKeys: [1, 2, 3, 4, 5, 6, 7, 8, 9, 0] });\r\n            return;\r\n        }\r\n\r\n        this.setState({ error: \"\" });\r\n\r\n        if (guess > this.state.number) {\r\n            this.setState({ numberMax: guess });\r\n        } else {\r\n            this.setState({ numberMin: guess });\r\n        }\r\n\r\n        if (this.state.text === \"?\") {\r\n            this.setState({ text: guess });\r\n            document.getElementById(\"guess-number-field\").value = \"\";\r\n            if (!this.state.keypad) {\r\n                document.getElementById(\"guess-number-field\").focus();\r\n            }\r\n            this.readyNextTurn();\r\n            return;\r\n        } else {\r\n            if (!this.state.keypad) {\r\n                document.getElementById(\"guess-number-field\").disabled = true;\r\n            }\r\n            this.countUpDownTo(guess);\r\n        }\r\n\r\n        document.getElementById(\"guess-number-field\").value = \"\";\r\n    }\r\n\r\n    renderPlayground() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.homeScreen &&\r\n                    <div className=\"d-flex flex-column align-items-center justify-content-center guessnum-home-screen\">\r\n                        <p className=\"display-2\">{this.state.text}</p>\r\n                        <p className=\"display-4\">Guess The Number</p>\r\n                        <br />\r\n                        <div className=\"d-flex\">\r\n                            <Button variant=\"success\" onClick={() => {\r\n                                this.ready();\r\n                            }}>Ready</Button>\r\n                            <Button variant=\"secondary\" className=\"ml-3\">Instructions</Button>\r\n                            <Button variant=\"danger\" className=\"ml-3\" onClick={() => {\r\n                                this.leave();\r\n                            }}>Leave</Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {\r\n                    this.state.gameScreen &&\r\n                    <div className=\"d-flex flex-column align-items-center justify-content-center guessnum-home-screen\">\r\n                        <p className=\"display-2\">{this.state.text}</p>\r\n                        <p className=\"display-4\">{this.state.numberMin} - {this.state.numberMax}</p>\r\n                        <br />\r\n                        <InputGroup className=\"ml-8 mr-8\">\r\n                            <FormControl\r\n                                id=\"guess-number-field\"\r\n                                type=\"number\"\r\n                                placeholder=\"Your Guess\"\r\n                                aria-label=\"Your Guess\"\r\n                                onKeyPress={(evt) => {\r\n                                    if (evt.key === \"Enter\") {\r\n                                        this.guess();\r\n                                    }\r\n                                }}\r\n                                disabled\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <Button variant=\"success\" onClick={this.guess}>Guess</Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <br />\r\n                        <p className=\"text-danger\">{this.state.error}</p>\r\n                    </div>\r\n                }\r\n                {\r\n                    this.state.resultScreen &&\r\n                    <div className=\"d-flex flex-column align-items-center justify-content-center guessnum-home-screen\">\r\n                        <p className=\"display-2\">{this.state.text}</p>\r\n                        <p className=\"display-4 text-success\">Bingo!</p>\r\n                        { this.state.playerName &&\r\n                            <p>Winner: <b>{this.state.playerName}</b></p>\r\n                        }\r\n                        <br />\r\n                        <div className=\"d-flex\">\r\n                            <Button variant=\"success\" onClick={() => {\r\n                                clearInterval(this.interval);\r\n                                document.getElementsByTagName(\"body\")[0].classList.remove(\"guessnum-correct\");\r\n                                this.ready();\r\n                            }}>Ready</Button>\r\n                            <Button variant=\"secondary\" className=\"ml-3\">Instructions</Button>\r\n                            <Button variant=\"danger\" className=\"ml-3\" onClick={() => {\r\n                                this.leave();\r\n                            }}>Leave</Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <NumericKeypad show={this.state.gameScreen} enabled={this.state.enabledKeys} doneEnabled={true} backspaceEnabled={true} onNumberClick={(evt) => {\r\n                    evt.preventDefault();\r\n                    console.log(\"Click num\");\r\n                    var val = evt.target.innerHTML;\r\n                    document.getElementById(\"guess-number-field\").value = document.getElementById(\"guess-number-field\").value + val;\r\n                    this.updateKeypad();\r\n                }} onDoneClick={(evt) => {\r\n                    evt.preventDefault();\r\n                    console.log(\"Click done\");\r\n                    this.guess();\r\n                }} onBackspaceClick={(evt) => {\r\n                    evt.preventDefault();\r\n                    console.log(\"Click bs\");\r\n                    document.getElementById(\"guess-number-field\").value = document.getElementById(\"guess-number-field\").value.slice(0, -1);\r\n                    this.updateKeypad();\r\n                }} />\r\n            </div>\r\n        );\r\n\t}\r\n\r\n}"],"sourceRoot":""}