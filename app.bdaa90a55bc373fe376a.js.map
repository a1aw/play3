{"version":3,"sources":["webpack:///./src/css/style.css?9fcd","webpack:///./src/css/style.css","webpack:///./src/js/components/GameModal.js","webpack:///./src/js/components/SetupLocalPlayersModal.js","webpack:///./src/js/components/PassToPlayerModal.js","webpack:///./src/js/components/Playground.js","webpack:///./src/js/App.js","webpack:///./src/js/playgrounds/GuessNumberPlayground.js"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","props","Modal","show","animation","backdrop","Header","Title","Body","InputGroup","className","FormControl","placeholder","aria-label","aria-describedby","Append","Button","variant","onClick","startGame","Form","Check","type","id","label","checked","disabled","Footer","React","useState","players","setPlayers","items","min","max","key","nameFields","Prepend","Text","Group","Label","Control","as","onChange","p","document","getElementById","value","block","val","map","onComplete","playerName","onContinue","Playground","turns","state","loading","loadingMsg","this","localMode","setupLocalPlayers","getMinimumPlayers","getMaximumPlayers","enable","disable","setState","minPlayers","maxPlayers","length","player","waitPlayer","nextTurn","onDisable","playersList","Spinner","isSetupComplete","renderPlayground","SetupLocalPlayersModal","console","log","PassToPlayerModal","bind","Component","Games","maximum","randCount","homeScreen","gameScreen","text","number","numberMin","numberMax","random","clearTimeout","timeout","rand","Math","floor","setTimeout","readyNextTurn","focus","to","from","countUpDownTo","resultScreen","guessStr","guess","parseInt","isNaN","error","ready","leave","onKeyPress","evt","App","modalShow","playground","gameName","createElement","alert","GameModal","onHide","ReactDOM","render"],"mappings":"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","file":"app.bdaa90a55bc373fe376a.js","sourcesContent":["var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./style.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body {\\r\\n    background-color: rgb(229, 229, 229)\\r\\n}\\r\\n\\r\\n.party-list {\\r\\n    margin: 4px;\\r\\n    position: absolute;\\r\\n    top: 4px;\\r\\n    right: 4px;\\r\\n}\\r\\n\\r\\n.app-title {\\r\\n    margin: 1.5rem;\\r\\n}\\r\\n\\r\\n.hori-scroll {\\r\\n    margin: 4px;\\r\\n    overflow: auto;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.hori-scroll button {\\r\\n    margin: 4px;\\r\\n}\\r\\n\\r\\n.playground {\\r\\n    padding: 8px;\\r\\n}\\r\\n\\r\\n.loading {\\r\\n    margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.guessnum-home-screen {\\r\\n    height: 90vh;\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react';\r\nimport { Modal, Button, ButtonGroup, InputGroup, FormControl, Form } from 'react-bootstrap';\r\n\r\nexport default function(props) {\r\n    return (\r\n        <Modal show={props.show} animation={false} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Play³</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <label>Join a party:</label>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        placeholder=\"Party Code\"\r\n                        aria-label=\"Party Code\"\r\n                        aria-describedby=\"party-code-field-addon\"\r\n                    />\r\n                    <InputGroup.Append>\r\n                        <Button variant=\"success\">Join</Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n                <div className=\"d-flex\">\r\n                    <Button variant=\"success\" className=\"btn-block\">Quick join</Button>\r\n                    <Button variant=\"secondary\" className=\"ml-2\"><i className=\"fas fa-cog\"></i></Button>\r\n                </div>\r\n                <hr />\r\n                <p>Start a new game:</p>\r\n                <div className=\"hori-scroll\">\r\n                    <Button variant=\"secondary\" onClick={() => { props.startGame(\"classic\") }}><i className=\"fas fa-heart fa-2x\"></i><br />Classic</Button>\r\n                    <Button variant=\"secondary\" onClick={() => { props.startGame(\"royal\") }}><i className=\"fas fa-grin-stars fa-2x\"></i><br />Royal</Button>\r\n                    <Button variant=\"secondary\" onClick={() => { props.startGame(\"twentyone\") }}><i className=\"fas fa-sort-numeric-down fa-2x\"></i><br />Twenty-one</Button>\r\n                    <Button variant=\"secondary\" onClick={() => { props.startGame(\"guessnum\") }}><i className=\"fas fa-list-ol fa-2x\"></i><br />Guess Number</Button>\r\n                    <Button variant=\"secondary\" onClick={() => { props.startGame(\"guessbig\") }}><i className=\"fas fa-dice fa-2x\"></i><br />Guess Big</Button>\r\n                </div>\r\n                <Form.Check\r\n                    type=\"switch\"\r\n                    id=\"local-mode-switch\"\r\n                    label=\"Start game locally\"\r\n                    checked={true}\r\n                    disabled\r\n                />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import React from 'react';\r\nimport { Modal, Button, ButtonGroup, InputGroup, FormControl, Form } from 'react-bootstrap';\r\n\r\nexport default function (props) {\r\n    var [players, setPlayers] = React.useState(false);\r\n\r\n    var items = [];\r\n    var i;\r\n    for (i = props.min; i <= props.max; i++) {\r\n        items.push(<option key={i}>{i}</option>);\r\n    }\r\n\r\n    if (!players) {\r\n        players = props.min;\r\n    }\r\n\r\n    var nameFields = [];\r\n    for (i = 1; i <= players; i++) {\r\n        nameFields.push(\r\n            <InputGroup className=\"mb-3\" key={i}>\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text id={\"player-number-\" + i}>Player {i}</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                    placeholder={\"Player \" + i}\r\n                    aria-label=\"Nickname\"\r\n                    aria-describedby={\"player-number-\" + i}\r\n                    id={\"player-nick-\" + i}\r\n                />\r\n            </InputGroup>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <Modal show={props.show} animation={false} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Setup Players</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>This game requires at least {props.min} player(s) and at maximum {props.max} player(s). Please enter the names for the players below:</p>\r\n                <Form.Group>\r\n                    <Form.Label>Players:</Form.Label>\r\n                    <Form.Control as=\"select\" id=\"localPlayersSelect\" onChange={() => {\r\n                        var p = document.getElementById(\"localPlayersSelect\").value;\r\n                        setPlayers(p);\r\n                    }}>\r\n                        {items}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                {nameFields}\r\n                <Button variant=\"success\" block onClick={() => {\r\n                    var map = [];\r\n                    var i;\r\n                    var val;\r\n                    for (i = 1; i <= players; i++) {\r\n                        val = document.getElementById(\"player-nick-\" + i).value;\r\n                        if (val === \"\") {\r\n                            val = \"Player \" + i;\r\n                        }\r\n                        map.push(val);\r\n                    }\r\n                    props.onComplete(map);\r\n                }}>Continue</Button>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import React from 'react';\r\nimport { Modal, Button, ButtonGroup, InputGroup, FormControl, Form } from 'react-bootstrap';\r\n\r\nexport default function (props) {\r\n    return (\r\n        <Modal show={props.show} backdrop=\"static\">\r\n            <Modal.Header>\r\n                <Modal.Title>Pass to {props.playerName}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>It is <b>{props.playerName}</b> turn! Pass the device and let {props.playerName} to press the \"Continue\" button.</p>\r\n                <Button variant=\"success\" block onClick={props.onContinue}>Continue</Button>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Application licensed under the GPLv3 Public License.</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import React from 'react';\r\nimport SetupLocalPlayersModal from './SetupLocalPlayersModal';\r\nimport PassToPlayerModal from './PassToPlayerModal';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport default class Playground extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.players = false;\r\n        this.turns = 0;\r\n        this.state = { loading: true, loadingMsg: \"Loading playground\" };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.localMode) {\r\n            this.setupLocalPlayers(this.getMinimumPlayers(), this.getMaximumPlayers());\r\n        } else {\r\n            this.enable();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.disable();\r\n    }\r\n\r\n    isSetupComplete() {\r\n        return this.props.localMode && this.players;\r\n    }\r\n\r\n    setupLocalPlayers(min, max) {\r\n        this.setState({\r\n            loadingMsg: \"Setting up local players\",\r\n            minPlayers: min,\r\n            maxPlayers: max,\r\n            setupLocalPlayers: true\r\n        });\r\n    }\r\n\r\n    startGame() {\r\n\r\n    }\r\n\r\n    ready() {\r\n        if (this.props.localMode) {\r\n            this.startGame();\r\n        }\r\n        //TODO Submit ready status\r\n    }\r\n\r\n    readyNextTurn() {\r\n        if (this.props.localMode) {\r\n            if (this.players.length > 1) {\r\n                var player = this.players[this.turns++ % this.players.length];\r\n                this.setState({ waitPlayer: true, playerName: player });\r\n            } else {\r\n                this.nextTurn();\r\n            }\r\n        } else {\r\n            //TODO online mode check\r\n        }\r\n    }\r\n\r\n    leave() {\r\n        this.disable();\r\n        this.props.onDisable();\r\n        //TODO Submit leave status\r\n    }\r\n\r\n    getMinimumPlayers() {\r\n        return 1;\r\n    }\r\n\r\n    getMaximumPlayers() {\r\n        return 1;\r\n    }\r\n\r\n    nextTurn() {\r\n\r\n    }\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n\r\n    renderPlayground() {\r\n\r\n    }\r\n\r\n    render() {\r\n        var playersList = false;\r\n        if (this.players) {\r\n            playersList = [];\r\n            var i;\r\n            for (i = 0; i < this.players.length; i++) {\r\n                playersList.push(<div key={this.players[i]}><span className={this.state.playerName === this.players[i] ? \"font-weight-bold\" : \"\"}>{this.players[i]}</span><br /></div>);\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"container-fluid playground\">\r\n                {this.state.loading &&\r\n                    <div className=\"loading d-flex align-items-center justify-content-center\">\r\n                    <center><Spinner animation=\"border\" /><br /><span>{this.state.loadingMsg}</span></center>\r\n                    </div>\r\n                }\r\n                {this.isSetupComplete() && this.renderPlayground()}\r\n                {this.state.setupLocalPlayers &&\r\n                    <SetupLocalPlayersModal min={this.state.minPlayers} max={this.state.maxPlayers} show={this.state.setupLocalPlayers} onComplete={\r\n                    (map) => {\r\n                        console.log(map);\r\n                        this.players = map;\r\n                        this.setState({\r\n                            setupLocalPlayers: false,\r\n                            loadingMsg: \"Loading playground\"\r\n                        });\r\n                        this.enable();\r\n                    }} />\r\n                }\r\n                {this.state.waitPlayer &&\r\n                    <PassToPlayerModal show={this.state.waitPlayer} playerName={this.state.playerName} onContinue={(() => {\r\n                        this.setState({ waitPlayer: false });\r\n                        this.nextTurn();\r\n                    }).bind(this)} />\r\n                }\r\n                {playersList &&\r\n                    <div className=\"party-list\">\r\n                        <h4>Party</h4>\r\n                        {playersList}\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};","// JavaScript source code\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GameModal from './components/GameModal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/js/fontawesome';\r\nimport '@fortawesome/fontawesome-free/js/solid';\r\nimport '@fortawesome/fontawesome-free/js/regular';\r\nimport '@fortawesome/fontawesome-free/js/brands';\r\nimport '../css/style.css';\r\n\r\n/*\r\nimport ClassicPlayground from './playgrounds/ClassicPlayground'\r\nimport RoyalPlayground from './playgrounds/RoyalPlayground'\r\nimport TwentyOnePlayground from './playgrounds/TwentyOnePlayground'\r\n*/\r\nimport GuessNumberPlayground from './playgrounds/GuessNumberPlayground'\r\n/*\r\nimport GuessBigPlayground from './playgrounds/GuessBigPlayground'\r\n*/\r\n\r\nconst Games = {\r\n    /*\r\n    \"classic\": ClassicPlayground,\r\n    \"royal\": RoyalPlayground,\r\n    \"twentyone\": TwentyOnePlayground,\r\n    */\r\n    \"guessnum\": GuessNumberPlayground,\r\n    /*\r\n    \"guessbig\": GuessBigPlayground\r\n    */\r\n};\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { modalShow: true, playground: false };\r\n        this.startGame = this.startGame.bind(this);\r\n    }\r\n\r\n    startGame(gameName) {\r\n        if (!Games[gameName]) {\r\n            alert(\"The selected game is currently unavailable.\");\r\n            return;\r\n        }\r\n        var localMode = document.getElementById(\"local-mode-switch\").checked;\r\n        this.setState({\r\n            modalShow: false,\r\n            playground: React.createElement(Games[gameName], {\r\n                localMode: localMode,\r\n                onDisable: () => {\r\n                    this.setState({\r\n                        modalShow: true,\r\n                        playground: false\r\n                    });\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.playground}\r\n                <GameModal show={this.state.modalShow} onHide={() => this.setState({ modalShow: false })} startGame={this.startGame} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));","import React from 'react';\r\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport Playground from '../components/Playground.js';\r\n\r\nconst DEFAULT_MAXIMUM = 100;\r\n\r\nexport default class GuessNumberPlayground extends Playground {\r\n\r\n\tconstructor(props){\r\n        super(props);\r\n        this.maximum = DEFAULT_MAXIMUM;\r\n        this.randCount = 0;\r\n    }\r\n\r\n    getMinimumPlayers() {\r\n        return 1;\r\n    }\r\n\r\n    getMaximumPlayers() {\r\n        return 4;\r\n    }\r\n\r\n    enable() {\r\n        if (this.players.length > 2) {\r\n            this.maximum = DEFAULT_MAXIMUM * this.players.length;\r\n        }\r\n        this.setState({\r\n            loading: false,\r\n            homeScreen: true,\r\n            gameScreen: false,\r\n            text: 0,\r\n            number: 0,\r\n            numberMin: 1,\r\n            numberMax: this.maximum\r\n        });\r\n        this.random();\r\n    }\r\n\r\n    disable() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n\r\n    random() {\r\n        var rand = Math.floor(Math.random() * this.maximum) + 1;\r\n        this.setState({ text: rand });\r\n        this.randCount++;\r\n        if (this.randCount < 50) {\r\n            this.timeout = setTimeout(function () {\r\n                this.random();\r\n            }.bind(this), 25);\r\n        } else {\r\n            if (this.state.homeScreen) {\r\n                this.randCount = 0;\r\n                this.timeout = setTimeout(function () {\r\n                    this.random();\r\n                }.bind(this), Math.floor(Math.random() * 5000));\r\n            } else {\r\n                this.randCount = 0;\r\n                rand = Math.floor(Math.random() * this.maximum) + 1;\r\n                this.setState({ text: \"?\", number: rand });\r\n                this.readyNextTurn();\r\n            }\r\n        }\r\n    }\r\n\r\n    nextTurn() {\r\n        document.getElementById(\"guess-number-field\").disabled = false;\r\n        document.getElementById(\"guess-number-field\").focus();\r\n    }\r\n\r\n    startGame() {\r\n        clearTimeout(this.timeout);\r\n        this.setState({ homeScreen: false, gameScreen: true });\r\n        this.setState({\r\n            numberMin: 1,\r\n            numberMax: this.maximum\r\n        });\r\n        this.random();\r\n    };\r\n\r\n    countUpDownTo(to) {\r\n        var from = this.state.text;\r\n        var i;\r\n        if (to > from) {\r\n            this.setState({ text: from + 1 });\r\n            this.timeout = setTimeout(function () {\r\n                this.countUpDownTo(to);\r\n            }.bind(this), 50);\r\n        } else if (to < from) {\r\n            this.setState({ text: from - 1 });\r\n            this.timeout = setTimeout(function () {\r\n                this.countUpDownTo(to);\r\n            }.bind(this), 50);\r\n        } else if (to === this.state.number) {\r\n            this.setState({ gameScreen: false, resultScreen: true });\r\n            return;\r\n        } else {\r\n            this.readyNextTurn();\r\n        }\r\n    }\r\n\r\n    guess() {\r\n        var guessStr = document.getElementById(\"guess-number-field\").value;\r\n        if (guessStr === \"\") {\r\n            this.setState({ error: \"It cannot be blank.\" })\r\n            return;\r\n        }\r\n        var guess = parseInt(guessStr);\r\n        if (isNaN(guess)) {\r\n            this.setState({ error: \"It must be an integer.\" })\r\n            return;\r\n        }\r\n\r\n        if (guess >= this.state.numberMax) {\r\n            this.setState({ error: \"It cannot be larger than the maximum value.\" })\r\n            return;\r\n        } else if (guess <= this.state.numberMin) {\r\n            this.setState({ error: \"It cannot be less than the minimum value.\" })\r\n            return;\r\n        }\r\n\r\n        this.setState({ error: \"\" });\r\n\r\n        if (guess > this.state.number) {\r\n            this.setState({ numberMax: guess });\r\n        } else {\r\n            this.setState({ numberMin: guess });\r\n        }\r\n\r\n        if (this.state.text === \"?\") {\r\n            this.setState({ text: guess });\r\n            document.getElementById(\"guess-number-field\").value = \"\";\r\n            document.getElementById(\"guess-number-field\").focus();\r\n            this.readyNextTurn();\r\n            return;\r\n        } else {\r\n            document.getElementById(\"guess-number-field\").disabled = true;\r\n            this.countUpDownTo(guess);\r\n        }\r\n\r\n        document.getElementById(\"guess-number-field\").value = \"\";\r\n    }\r\n\r\n    renderPlayground() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.homeScreen &&\r\n                    <div className=\"d-flex flex-column align-items-center justify-content-center guessnum-home-screen\">\r\n                        <p className=\"display-2\">{this.state.text}</p>\r\n                        <p className=\"display-3\">Guess The Number</p>\r\n                        <br />\r\n                        <div className=\"d-flex\">\r\n                            <Button variant=\"success\" onClick={() => {\r\n                                this.ready();\r\n                            }}>Ready</Button>\r\n                            <Button variant=\"secondary\" className=\"ml-3\">Instructions</Button>\r\n                            <Button variant=\"danger\" className=\"ml-3\" onClick={() => {\r\n                                this.leave();\r\n                            }}>Leave</Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {\r\n                    this.state.gameScreen &&\r\n                    <div className=\"d-flex flex-column align-items-center justify-content-center guessnum-home-screen\">\r\n                        <p className=\"display-2\">{this.state.text}</p>\r\n                        <p className=\"display-4\">{this.state.numberMin} - {this.state.numberMax}</p>\r\n                        <br />\r\n                        <InputGroup className=\"ml-8 mr-8\">\r\n                            <FormControl\r\n                                id=\"guess-number-field\"\r\n                                type=\"number\"\r\n                                placeholder=\"Your Guess\"\r\n                                aria-label=\"Your Guess\"\r\n                                onKeyPress={(evt) => {\r\n                                    if (evt.key === \"Enter\") {\r\n                                        this.guess();\r\n                                    }\r\n                                }}\r\n                                disabled\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <Button variant=\"success\" onClick={this.guess}>Guess</Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <br />\r\n                        <p className=\"text-danger\">{this.state.error}</p>\r\n                    </div>\r\n                }\r\n                {\r\n                    this.state.resultScreen &&\r\n                    <div className=\"d-flex flex-column align-items-center justify-content-center guessnum-home-screen\">\r\n                        <p className=\"display-2\">{this.state.text}</p>\r\n                        <p className=\"display-4 text-success\">Bingo!</p>\r\n                        { this.state.playerName &&\r\n                            <p>Winner: <b>{this.state.playerName}</b></p>\r\n                        }\r\n                        <br />\r\n                        <div className=\"d-flex\">\r\n                            <Button variant=\"success\" onClick={() => {\r\n                                this.ready();\r\n                            }}>Ready</Button>\r\n                            <Button variant=\"secondary\" className=\"ml-3\">Instructions</Button>\r\n                            <Button variant=\"danger\" className=\"ml-3\" onClick={() => {\r\n                                this.leave();\r\n                            }}>Leave</Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n\t}\r\n\r\n}"],"sourceRoot":""}